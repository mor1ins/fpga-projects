// dphy_rx_wrap_beh.v generated by Lattice IP Model Creator version 1
// created on Mon, Mar 16, 2020 11:32:21 AM
// Copyright(c) 2007 Lattice Semiconductor Corporation. All rights reserved
// obfuscator_exe version 1.mar0807

// top


































































`timescale 1 ns / 100 ps
module dphy_rx_wrap #
(
parameter                  NUM_RX_LANE       = 4,
parameter                  RX_GEAR           = 16,
parameter                  DPHY_RX_IP        = "LATTICE",
parameter                  LANE_ALIGN        = "OFF",
parameter                  WORD_ALIGN        = "OFF",      
parameter                  RX_CLK_MODE       = "HS_LP",
parameter                  BYTECLK_MHZ       = 111,
parameter                  FIFO_TYPE         = "EBR",

parameter                  RX_FIFO           = "ON",
parameter                  RX_FIFO_TYPE      = "EBR",
parameter                  RX_FIFO_DEPTH     = 1024,
parameter                  RX_FIFO_IMPL      = "QUEUE",        
parameter                  RX_FIFO_PKT_DLY   = 1,              
parameter                  RX_FIFO_CTR_WIDTH = 12,             
parameter                  NUM_QUE_ENT       = 4,              
parameter                  FR_FIFO_CLKMODE   = "DC"            
)
(
input  wire                reset_n_i,
input  wire                reset_byte_n_i,
input  wire                reset_byte_fr_n_i,
input  wire                clk_byte_fr_i,
input  wire                term_d0_en_i,
input  wire                term_d1_en_i,
input  wire                term_d2_en_i,
input  wire                term_d3_en_i,
input  wire                hs_d0_en_i,
input  wire                hs_d1_en_i,
input  wire                hs_d2_en_i,
input  wire                hs_d3_en_i,

  
input  wire [3:0]          d_sot_det, 
input  wire [3:0]          d_sote_det,


input  wire                clk_byte_i, 
input  wire [RX_GEAR-1:0]  bd0_i,      
input  wire [RX_GEAR-1:0]  bd1_i,      
input  wire [RX_GEAR-1:0]  bd2_i,      
input  wire [RX_GEAR-1:0]  bd3_i,      
output wire [RX_GEAR-1:0]  bd0_o,      
output wire [RX_GEAR-1:0]  bd1_o,      
output wire [RX_GEAR-1:0]  bd2_o,      
output wire [RX_GEAR-1:0]  bd3_o,      
output wire                hs_sync_o        
);
reg                    hs_d0_en_r, hs_d1_en_r, hs_d2_en_r, hs_d3_en_r;
reg                    cb36317, uxb18bd, hq8c5ed, ic62f6a;
reg                    ir17b51, zmbda8d, aled46b, al6a35d;
reg                    wj51aec, co8d764, xj6bb20, by5d907;
reg [3:0]              xjec83a;
wire                   zx641d6, ng20eb7, sj75ba, tw3add5;
wire                   ald6eaa;
wire [3:0]             ngb7555;
wire [RX_GEAR-1:0]     rgd555e, vxaaaf3, nr5579f, ohabcff;
wire [RX_GEAR-1:0]     blf3fec, ir9ff66, cmffb35, uvfd9a8;
wire                   nrecd45;
wire                   vi66a2e, hq35173, doa8b9a, vv45cd2;
wire [RX_GEAR-1:0] tu734b8;
wire [RX_GEAR-1:0] pfd2e1c;
wire [RX_GEAR-1:0] zmb8738;
wire [RX_GEAR-1:0] xl1ce14;
wire [NUM_RX_LANE*RX_GEAR-1:0] ldc29a6;
wire                           ls14d36;
wire [NUM_RX_LANE*RX_GEAR-1:0] oua6c89;
wire                           ep36449;
reg               jeb224d;
reg               zz9126b;
reg               fc8935f;
wire su49afa;
reg xw4d7d1, jp6be8a, vv5f457, ykfa2be, qgd15f1;
reg [RX_GEAR-1:0] xw57c4c, qvbe263,                  faf131d, ng898ea,  ic4c753, rg63a98,  cb1d4c3, goea61d;
reg [RX_GEAR-1:0] gq98740;
reg [RX_GEAR-1:0] kf1d00c;
reg [RX_GEAR-1:0] fn4032d;
reg [RX_GEAR-1:0] xlcb73;
reg [RX_GEAR-1:0] lf2dcfc;
reg [RX_GEAR-1:0] zk73f36;
reg [RX_GEAR-1:0] hbfcd95;
reg [RX_GEAR-1:0] wl3657f;
reg               xyb2bfd;
reg               cb95fea;
localparam [RX_GEAR-1:0] ip7faa7 = (RX_GEAR == 16)? 16'hB800 : 8'hB8;
reg ayea9e4;
reg al54f21;
reg jea790c;
reg qv3c863;
reg fae431d;
reg ie218eb;
reg fpc758;
reg tu63ac6;
reg [3 : 0] sj1d633;
reg [3 : 0] faeb19d;
reg [RX_GEAR - 1 : 0] ipc6752;
reg [RX_GEAR - 1 : 0] mg9d4ac;
reg [RX_GEAR - 1 : 0] ho52b08;
reg [RX_GEAR - 1 : 0] wyac21c;
reg vv610e1;
reg ir870f;
reg qg4387c;
reg bn1c3e0;
reg zke1f07;
reg ief83a;
reg rg7c1d0;
reg ice0e82;
reg ep7410;
reg ls3a085;
reg rgd042b;
reg sw8215b;
reg [3 : 0] sw10ad9;
reg yz856c8;
reg ks2b644;
reg yx5b220;
reg yxd9104;
reg dzc8825;
reg [3 : 0] ip4412f;
reg [RX_GEAR - 1 : 0] ri4be2;
reg [RX_GEAR - 1 : 0] ba2f89a;
reg [RX_GEAR - 1 : 0] ipe269a;
reg [RX_GEAR - 1 : 0] yz9a6a6;
reg [RX_GEAR - 1 : 0] ux9a9a4;
reg [RX_GEAR - 1 : 0] mga6928;
reg [RX_GEAR - 1 : 0] wla4a09;
reg [RX_GEAR - 1 : 0] hd28263;
reg en4131f;
reg jr98fc;
reg cm4c7e7;
reg vi63f38;
reg gq1f9c3;
reg [RX_GEAR - 1 : 0] yxe70cf;
reg [RX_GEAR - 1 : 0] czc33e6;
reg [RX_GEAR - 1 : 0] pscf9ae;
reg [RX_GEAR - 1 : 0] vve6b93;
reg [NUM_RX_LANE * RX_GEAR - 1 : 0] go727dc;
reg zm93ee1;
reg [NUM_RX_LANE * RX_GEAR - 1 : 0] yxdc2e2;
reg bye1715;
reg dob8ab;
reg cm5c55a;
reg ipe2ad1;
reg gq1568d;
reg kfab469;
reg zx5a34c;
reg ead1a66;
reg ou8d330;
reg ne69980;
reg [RX_GEAR - 1 : 0] ne66011;
reg [RX_GEAR - 1 : 0] gd80452;
reg [RX_GEAR - 1 : 0] pu114a5;
reg [RX_GEAR - 1 : 0] ps5295d;
reg [RX_GEAR - 1 : 0] zza575e;
reg [RX_GEAR - 1 : 0] rg5d7b9;
reg [RX_GEAR - 1 : 0] cz5ee5b;
reg [RX_GEAR - 1 : 0] oub96ed;
reg [RX_GEAR - 1 : 0] mr5bb41;
reg [RX_GEAR - 1 : 0] yxed06e;
reg [RX_GEAR - 1 : 0] mr41ba9;
reg [RX_GEAR - 1 : 0] vv6ea6d;
reg [RX_GEAR - 1 : 0] qia9b7c;
reg [RX_GEAR - 1 : 0] ea6df03;
reg [RX_GEAR - 1 : 0] ps7c0c5;
reg [RX_GEAR - 1 : 0] lf3151;
reg qv18a8f;
reg lqc547c;
reg [2047:0] ls2a3e2;
wire [80:0] gb51f12;





localparam gd8f894 = 81,by7c4a4 = 32'hfdffc68b;
localparam [31:0] mre2522 = by7c4a4;
localparam rv948a5 = by7c4a4 & 4'hf;
localparam [11:0] vx22975 = 'h7ff;
wire [(1 << rv948a5) -1:0] pha5d7a;
reg [gd8f894-1:0] wj75eb1;
reg [rv948a5-1:0] of7ac6e [0:1];
reg [rv948a5-1:0] cbb1ba4;
reg sw8dd25;
integer zx6e929;
integer th7494f;



generate  if (NUM_RX_LANE > 0) begin    assign tu734b8 = oua6c89[1*RX_GEAR-1:0*RX_GEAR];  end  if (NUM_RX_LANE > 1) begin    assign pfd2e1c = yxdc2e2[2*RX_GEAR-1:1*RX_GEAR];  end  if (NUM_RX_LANE > 2) begin    assign zmb8738 = yxdc2e2[3*RX_GEAR-1:2*RX_GEAR];  end  if (NUM_RX_LANE > 3) begin    assign xl1ce14 = yxdc2e2[4*RX_GEAR-1:3*RX_GEAR];  end
endgenerate

assign ldc29a6        = (NUM_RX_LANE == 4)?    {wyac21c,ho52b08,mg9d4ac,ipc6752} :                                    (NUM_RX_LANE == 3)?    {ho52b08,mg9d4ac,ipc6752} :                                    (NUM_RX_LANE == 2)?    {mg9d4ac,ipc6752} :                                  {ipc6752};
assign ls14d36     = fae431d;





assign su49afa     = ipe2ad1 || cm5c55a;

always @(posedge clk_byte_i or negedge reset_n_i) begin  if (reset_n_i == 1'd0) begin    jeb224d <= 1'd0;    zz9126b      <= 1'd0;    fc8935f    <= 1'd0;  end  else begin    jeb224d <= fae431d;    zz9126b      <= dob8ab;    fc8935f    <= cm5c55a;  end
end







generate  if (RX_FIFO == "ON") begin : kq7d625    faeb128 # (      .RX_FIFO_IMPL       (RX_FIFO_IMPL),                 .NUM_RX_LANE        (NUM_RX_LANE),      .RX_GEAR            (RX_GEAR),      .hd917dc         ("LIFMD"),      .tj8bee7      (RX_FIFO_DEPTH),      .NUM_QUE_ENT        (NUM_QUE_ENT),      .wje7d94       (RX_FIFO_TYPE),      .nrf6528         (RX_FIFO_PKT_DLY),                                                                                                                
      .zz94a3a          (RX_FIFO_CTR_WIDTH),                                                                .FR_FIFO_CLKMODE    (FR_FIFO_CLKMODE)    )    je3adf3 (      .reset_byte_fr_n_i  (reset_byte_fr_n_i),            .clk_byte_fr_i      (clk_byte_fr_i),                      .wl9aaaf (gq1568d),                         .zzaabeb     (clk_byte_i),                         .hdafafe         (go727dc),          .tuebfb8          (fae431d),                         .tufee1f           (1),                                  .alf70fa          (oua6c89),         .czc3eaa      (ep36449),        .kqfaaa0(),      .fad5500       (),      .dbaa803       (),      .yx5401f        (),      .zza00fd        (),      .mg7ef   (),      .vx3f78      (),      .mg1fbc6       ()    );  end  else if (RX_FIFO == "OFF") begin : icef18d     faeb128 # (      .RX_FIFO_IMPL       ("SINGLE"),                     .NUM_RX_LANE        (NUM_RX_LANE),      .RX_GEAR            (RX_GEAR),      .tj8bee7      (4),      .NUM_QUE_ENT        (1),      .wje7d94       ("LUT"),      .nrf6528         (1),                                                                                                                              
      .zz94a3a          (1),                                                                                .FR_FIFO_CLKMODE    ("SC")             )    je3adf3 (      .clk_byte_fr_i      (clk_byte_fr_i),                .reset_byte_fr_n_i  (reset_byte_fr_n_i),                  .zzaabeb     (clk_byte_i),                   .wl9aaaf (1'd1),                               .hdafafe         (go727dc),          .tuebfb8          (zm93ee1),             .tufee1f           (1'd1),                               .alf70fa          (oua6c89),         .czc3eaa      (ep36449)     );  end
endgenerate






                











                                                                                    
                                                                                                                                                                      

generate        if (DPHY_RX_IP == "MIXEL") begin                        assign ngb7555 = sj1d633 | faeb19d;                if (NUM_RX_LANE == 1)            assign zx641d6 = ip4412f[0];        else if (NUM_RX_LANE == 2)            assign zx641d6 = &ip4412f[1:0];        else if (NUM_RX_LANE == 3)            assign zx641d6 = &ip4412f[2:0];        else if (NUM_RX_LANE == 4)            assign zx641d6 = &ip4412f[3:0];    end    else if (DPHY_RX_IP == "LATTICE") begin        always @(posedge clk_byte_i or negedge reset_byte_n_i) begin            if (~reset_byte_n_i) begin                hs_d0_en_r  <= 0;                cb36317 <= 0;                ir17b51 <= 0;            end            else begin                hs_d0_en_r  <= fae431d;                cb36317 <= hs_d0_en_r;                ir17b51 <= vv610e1;            end        end
                            assign zx641d6 = hs_d0_en_r | vv610e1 | zke1f07 ; 

        if (NUM_RX_LANE > 1) begin            always @(posedge clk_byte_i or negedge reset_byte_n_i) begin                if (~reset_byte_n_i) begin                    hs_d1_en_r  <= 0;                    uxb18bd <= 0;                    zmbda8d <= 0;                end                else begin                    hs_d1_en_r  <= ie218eb;                    uxb18bd <= hs_d1_en_r;                    zmbda8d <= ir870f;                end            end
                                        assign ng20eb7 = hs_d1_en_r | ir870f | ief83a ; 

        end        if (NUM_RX_LANE > 2) begin            always @(posedge clk_byte_i or negedge reset_byte_n_i) begin                if (~reset_byte_n_i) begin                    hs_d2_en_r  <= 0;                    hq8c5ed <= 0;                    aled46b <= 0;                end                else begin                    hs_d2_en_r  <= fpc758;                    hq8c5ed <= hs_d2_en_r;                    aled46b <= qg4387c;                end            end
                                        assign sj75ba = hs_d2_en_r | qg4387c | rg7c1d0 ; 

        end        if (NUM_RX_LANE > 3) begin            always @(posedge clk_byte_i or negedge reset_byte_n_i) begin                if (~reset_byte_n_i) begin                    hs_d3_en_r  <= 0;                    ic62f6a <= 0;                    al6a35d <= 0;                end                else begin                    hs_d3_en_r  <= tu63ac6;                    ic62f6a <= hs_d3_en_r;                    al6a35d <= bn1c3e0;                end            end

                                      assign tw3add5 = hs_d3_en_r | bn1c3e0 | ice0e82 ; 

        end    end
endgenerate



always @(posedge clk_byte_fr_i or negedge reset_byte_fr_n_i)
begin    if (~reset_byte_fr_n_i) begin        wj51aec  <= 0;        co8d764  <= 0;        xj6bb20  <= 0;        by5d907  <= 0;    end    else begin        wj51aec  <= yz856c8;        co8d764  <= ep7410;        xj6bb20  <= ls3a085;        by5d907  <= rgd042b;    end
end



always @(posedge clk_byte_fr_i or negedge reset_byte_fr_n_i)
begin    if (~reset_byte_fr_n_i) begin        xw4d7d1  <= 0;        jp6be8a  <= 0;        vv5f457  <= 0;        ykfa2be  <= 0;    end    else begin        xw4d7d1  <= ayea9e4;        jp6be8a  <= kfab469;        vv5f457  <= zx5a34c;        ykfa2be  <= ead1a66;    end
end


always @(posedge clk_byte_fr_i or negedge reset_byte_fr_n_i)
begin  if (RX_GEAR == 8) begin    if ((ead1a66) || (ou8d330)) begin        qgd15f1 <= 1'b1;    end    else begin        qgd15f1 <= 1'b0;    end  end  else begin    if ((zx5a34c) || (ead1a66) || (ou8d330)) begin        qgd15f1 <= 1'b1;    end    else begin        qgd15f1 <= 1'b0;    end  end
end

generate	if (WORD_ALIGN == "ON") begin : th7e945    zkf4a2e # (      .DPHY_RX_IP  (DPHY_RX_IP),      .RX_GEAR     (RX_GEAR),      .NUM_RX_LANE (NUM_RX_LANE),      .BYTECLK_MHZ (BYTECLK_MHZ)    )    rib8555 (      .reset_n_i        (reset_byte_fr_n_i),      .clk_byte_i       (clk_byte_fr_i),      .bd0_i            (yxe70cf),      .bd1_i            (czc33e6),      .bd2_i            (pscf9ae),      .bd3_i            (vve6b93),      .kf2c86b         (bye1715),      .mg21ae7         (bye1715),      .jp6b9c4         (bye1715),      .cze7138         (bye1715),      .bd0_o            (rgd555e),      .bd1_o            (vxaaaf3),      .bd2_o            (nr5579f),      .bd3_o            (ohabcff),      .ukb9d41    (),      .kqcea09  (vi66a2e),      .lsa8244  (hq35173),      .fp911c  (doa8b9a),      .gb44733  (vv45cd2),      .hs_sync_o        (nrecd45)    );  end  else begin : oh33976    assign rgd555e       = yxe70cf;    assign vxaaaf3       = czc33e6;    assign nr5579f       = pscf9ae;    assign ohabcff       = vve6b93;        assign vi66a2e  = bye1715;    assign hq35173  = bye1715;    assign doa8b9a  = bye1715;    assign vv45cd2  = bye1715;    assign nrecd45 = bye1715;  end
endgenerate

generate  if (LANE_ALIGN == "ON") begin : rtec4cb    ea6265f #(      .RX_GEAR     (RX_GEAR),      .NUM_RX_LANE (NUM_RX_LANE),      .uvf8cc6  (4),      .FIFO_TYPE   (FIFO_TYPE)    )    mg98d6d (      .gbc6b68       (clk_byte_fr_i),      .fcada23     (~reset_byte_fr_n_i),      .bd0_i       (ri4be2),      .bd1_i       (ba2f89a),      .bd2_i       (ipe269a),      .bd3_i       (yz9a6a6),      .xy20269     (jr98fc),      .fp9a5a     (cm4c7e7),      .ho696ba     (vi63f38),      .rt5ae9d     (gq1f9c3),      .dbba77e      (en4131f),      .bd0_o       (blf3fec),      .bd1_o       (ir9ff66),      .bd2_o       (cmffb35),      .bd3_o       (uvfd9a8),      .hs_sync_o   (ald6eaa)    );  end  else begin : qi15ab3    assign blf3fec     = ri4be2;    assign ir9ff66     = ba2f89a;    assign cmffb35     = ipe269a;    assign uvfd9a8     = yz9a6a6;    assign ald6eaa = en4131f;  end
endgenerate
        assign bd0_o     = (DPHY_RX_IP == "MIXEL" && WORD_ALIGN == "OFF")? mr5bb41            : ux9a9a4;    assign bd1_o     = (DPHY_RX_IP == "MIXEL" && WORD_ALIGN == "OFF")? yxed06e            : mga6928;    assign bd2_o     = (DPHY_RX_IP == "MIXEL" && WORD_ALIGN == "OFF")? mr41ba9            : wla4a09;    assign bd3_o     = (DPHY_RX_IP == "MIXEL" && WORD_ALIGN == "OFF")? vv6ea6d            : hd28263;    assign hs_sync_o = (DPHY_RX_IP == "MIXEL" && WORD_ALIGN == "OFF")? lqc547c : dzc8825;





generate  if (DPHY_RX_IP == "MIXEL" && WORD_ALIGN == "OFF") begin    always @(posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin      if (~reset_byte_fr_n_i) begin        lf2dcfc      <= 'd0;        zk73f36      <= 'd0;        hbfcd95      <= 'd0;        wl3657f      <= 'd0;        xyb2bfd  <= 'd0;      end      else begin        lf2dcfc      <= ux9a9a4;        zk73f36      <= mga6928;        hbfcd95      <= wla4a09;        wl3657f      <= hd28263;        xyb2bfd  <= dzc8825;      end    end  end
    always @(posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin      if (~reset_byte_fr_n_i) begin        gq98740              <= 'd0;        kf1d00c              <= 'd0;        fn4032d              <= 'd0;        xlcb73              <= 'd0;        cb95fea   <= 'd0;      end      else begin        if (dzc8825 & !qv18a8f) begin          gq98740            <= ip7faa7;          kf1d00c            <= ip7faa7;          fn4032d            <= ip7faa7;          xlcb73            <= ip7faa7;          cb95fea <= 1'd1;        end        else if (qv18a8f) begin          gq98740            <= qia9b7c;          kf1d00c            <= ea6df03;          fn4032d            <= ps7c0c5;          xlcb73            <= lf3151;          cb95fea <= dzc8825;        end        else begin          gq98740            <= 'd0;          kf1d00c            <= 'd0;          fn4032d            <= 'd0;          xlcb73            <= 'd0;          cb95fea <= 'd0;        end      end    end



endgenerate
always@* begin ayea9e4<=gb51f12[0];al54f21<=gb51f12[1];jea790c<=gb51f12[2];qv3c863<=gb51f12[3];fae431d<=gb51f12[4];ie218eb<=gb51f12[5];fpc758<=gb51f12[6];tu63ac6<=gb51f12[7];sj1d633<={d_sot_det>>1,gb51f12[8]};faeb19d<={d_sote_det>>1,gb51f12[9]};ipc6752<={bd0_i>>1,gb51f12[10]};mg9d4ac<={bd1_i>>1,gb51f12[11]};ho52b08<={bd2_i>>1,gb51f12[12]};wyac21c<={bd3_i>>1,gb51f12[13]};vv610e1<=gb51f12[14];ir870f<=gb51f12[15];qg4387c<=gb51f12[16];bn1c3e0<=gb51f12[17];zke1f07<=gb51f12[18];ief83a<=gb51f12[19];rg7c1d0<=gb51f12[20];ice0e82<=gb51f12[21];ep7410<=gb51f12[22];ls3a085<=gb51f12[23];rgd042b<=gb51f12[24];sw8215b<=gb51f12[25];sw10ad9<={xjec83a>>1,gb51f12[26]};yz856c8<=gb51f12[27];ks2b644<=gb51f12[28];yx5b220<=gb51f12[29];yxd9104<=gb51f12[30];dzc8825<=gb51f12[31];ip4412f<={ngb7555>>1,gb51f12[32]};ri4be2<={rgd555e>>1,gb51f12[33]};ba2f89a<={vxaaaf3>>1,gb51f12[34]};ipe269a<={nr5579f>>1,gb51f12[35]};yz9a6a6<={ohabcff>>1,gb51f12[36]};ux9a9a4<={blf3fec>>1,gb51f12[37]};mga6928<={ir9ff66>>1,gb51f12[38]};wla4a09<={cmffb35>>1,gb51f12[39]};hd28263<={uvfd9a8>>1,gb51f12[40]};en4131f<=gb51f12[41];jr98fc<=gb51f12[42];cm4c7e7<=gb51f12[43];vi63f38<=gb51f12[44];gq1f9c3<=gb51f12[45];yxe70cf<={tu734b8>>1,gb51f12[46]};czc33e6<={pfd2e1c>>1,gb51f12[47]};pscf9ae<={zmb8738>>1,gb51f12[48]};vve6b93<={xl1ce14>>1,gb51f12[49]};go727dc<={ldc29a6>>1,gb51f12[50]};zm93ee1<=gb51f12[51];yxdc2e2<={oua6c89>>1,gb51f12[52]};bye1715<=gb51f12[53];dob8ab<=gb51f12[54];cm5c55a<=gb51f12[55];ipe2ad1<=gb51f12[56];gq1568d<=gb51f12[57];kfab469<=gb51f12[58];zx5a34c<=gb51f12[59];ead1a66<=gb51f12[60];ou8d330<=gb51f12[61];ne69980<=gb51f12[62];ne66011<={xw57c4c>>1,gb51f12[63]};gd80452<={qvbe263>>1,gb51f12[64]};pu114a5<={faf131d>>1,gb51f12[65]};ps5295d<={ng898ea>>1,gb51f12[66]};zza575e<={ic4c753>>1,gb51f12[67]};rg5d7b9<={rg63a98>>1,gb51f12[68]};cz5ee5b<={cb1d4c3>>1,gb51f12[69]};oub96ed<={goea61d>>1,gb51f12[70]};mr5bb41<={gq98740>>1,gb51f12[71]};yxed06e<={kf1d00c>>1,gb51f12[72]};mr41ba9<={fn4032d>>1,gb51f12[73]};vv6ea6d<={xlcb73>>1,gb51f12[74]};qia9b7c<={lf2dcfc>>1,gb51f12[75]};ea6df03<={zk73f36>>1,gb51f12[76]};ps7c0c5<={hbfcd95>>1,gb51f12[77]};lf3151<={wl3657f>>1,gb51f12[78]};qv18a8f<=gb51f12[79];lqc547c<=gb51f12[80];end
always@* begin ls2a3e2[2047]<=term_d1_en_i;ls2a3e2[2046]<=term_d2_en_i;ls2a3e2[2044]<=term_d3_en_i;ls2a3e2[2040]<=hs_d0_en_i;ls2a3e2[2032]<=hs_d1_en_i;ls2a3e2[2017]<=hs_d2_en_i;ls2a3e2[1987]<=hs_d3_en_i;ls2a3e2[1980]<=xl1ce14[0];ls2a3e2[1963]<=rgd555e[0];ls2a3e2[1942]<=jeb224d;ls2a3e2[1926]<=d_sot_det[0];ls2a3e2[1921]<=co8d764;ls2a3e2[1913]<=ldc29a6[0];ls2a3e2[1903]<=vi66a2e;ls2a3e2[1879]<=vxaaaf3[0];ls2a3e2[1872]<=faf131d[0];ls2a3e2[1837]<=zz9126b;ls2a3e2[1805]<=d_sote_det[0];ls2a3e2[1795]<=xj6bb20;ls2a3e2[1783]<=tu734b8[0];ls2a3e2[1778]<=ls14d36;ls2a3e2[1770]<=qgd15f1;ls2a3e2[1758]<=hq35173;ls2a3e2[1710]<=nr5579f[0];ls2a3e2[1696]<=ng898ea[0];ls2a3e2[1679]<=hq8c5ed;ls2a3e2[1627]<=fc8935f;ls2a3e2[1562]<=bd0_i[0];ls2a3e2[1543]<=by5d907;ls2a3e2[1519]<=pfd2e1c[0];ls2a3e2[1509]<=oua6c89[0];ls2a3e2[1499]<=uvfd9a8[0];ls2a3e2[1492]<=xw57c4c[0];ls2a3e2[1469]<=doa8b9a;ls2a3e2[1466]<=vv5f457;ls2a3e2[1398]<=ir9ff66[0];ls2a3e2[1373]<=ohabcff[0];ls2a3e2[1355]<=cb95fea;ls2a3e2[1344]<=ic4c753[0];ls2a3e2[1310]<=ic62f6a;ls2a3e2[1280]<=cb1d4c3[0];ls2a3e2[1207]<=su49afa;ls2a3e2[1144]<=zmbda8d;ls2a3e2[1076]<=bd1_i[0];ls2a3e2[1039]<=xjec83a[0];ls2a3e2[1026]<=gq98740[0];ls2a3e2[1023]<=term_d0_en_i;ls2a3e2[990]<=zmb8738[0];ls2a3e2[981]<=ngb7555[0];ls2a3e2[971]<=ep36449;ls2a3e2[960]<=wj51aec;ls2a3e2[951]<=nrecd45;ls2a3e2[936]<=qvbe263[0];ls2a3e2[891]<=vv45cd2;ls2a3e2[885]<=ykfa2be;ls2a3e2[839]<=uxb18bd;ls2a3e2[749]<=cmffb35[0];ls2a3e2[733]<=jp6be8a;ls2a3e2[699]<=blf3fec[0];ls2a3e2[677]<=xyb2bfd;ls2a3e2[640]<=rg63a98[0];ls2a3e2[572]<=ir17b51;ls2a3e2[513]<=goea61d[0];ls2a3e2[490]<=ald6eaa;ls2a3e2[480]<=al6a35d;ls2a3e2[419]<=cb36317;ls2a3e2[366]<=xw4d7d1;ls2a3e2[338]<=wl3657f[0];ls2a3e2[245]<=tw3add5;ls2a3e2[240]<=aled46b;ls2a3e2[209]<=bd3_i[0];ls2a3e2[169]<=hbfcd95[0];ls2a3e2[122]<=sj75ba;ls2a3e2[104]<=bd2_i[0];ls2a3e2[84]<=zk73f36[0];ls2a3e2[61]<=ng20eb7;ls2a3e2[42]<=lf2dcfc[0];ls2a3e2[30]<=zx641d6;ls2a3e2[21]<=xlcb73[0];ls2a3e2[10]<=fn4032d[0];ls2a3e2[5]<=kf1d00c[0];end         assign pha5d7a = ls2a3e2,gb51f12 = wj75eb1; initial begin zx6e929 = $fopen(".fred"); $fdisplay( zx6e929, "%3h\n%3h", (mre2522 >> 4) & vx22975, (mre2522 >> (rv948a5+4)) & vx22975 ); $fclose(zx6e929); $readmemh(".fred", of7ac6e); end always @ (pha5d7a) begin cbb1ba4 = of7ac6e[1]; for (th7494f=0; th7494f<gd8f894; th7494f=th7494f+1) begin wj75eb1[th7494f] = pha5d7a[cbb1ba4]; sw8dd25 = ^(cbb1ba4 & of7ac6e[0]); cbb1ba4 = {cbb1ba4, sw8dd25}; end end 
endmodule
















































`timescale 1 ns / 100 ps
module ea6265f #
(
parameter                 NUM_RX_LANE = 4,
parameter                 RX_GEAR     = 16,
parameter                 uvf8cc6  = 16,
parameter                 FIFO_TYPE   = "EBR"
)
(
input  wire              fcada23,
input  wire              gbc6b68,
input  wire [RX_GEAR-1:0] bd0_i,
input  wire [RX_GEAR-1:0] bd1_i,
input  wire [RX_GEAR-1:0] bd2_i,
input  wire [RX_GEAR-1:0] bd3_i,
input  wire               xy20269,
input  wire               fp9a5a,
input  wire               ho696ba,
input  wire               rt5ae9d,
input  wire               dbba77e,

output wire [RX_GEAR-1:0] bd0_o,
output wire [RX_GEAR-1:0] bd1_o,
output wire [RX_GEAR-1:0] bd2_o,
output wire [RX_GEAR-1:0] bd3_o,
output wire               hs_sync_o
);
reg       fn40313;
reg       pu189e;
reg       xlc4f3;
reg [9:0] go6279e;
reg       ph13cf0;
reg      fp9e787;
reg      dzf3c3e;
reg    zz9e1f6;
reg eaf0fb6;
reg [RX_GEAR - 1 : 0] ipc6752;
reg [RX_GEAR - 1 : 0] mg9d4ac;
reg [RX_GEAR - 1 : 0] ho52b08;
reg [RX_GEAR - 1 : 0] wyac21c;
reg ie3183f;
reg pu8c1f9;
reg wj60fca;
reg mt7e54;
reg tw3f2a4;
reg fnf9523;
reg rgca91e;
reg [9 : 0] mr548f2;
reg cba4794;
reg mt23ca5;
reg ng1e52d;
reg off296a;
reg jr94b54;
reg [2047:0] ls2a3e2;
wire [16:0] gb51f12;





localparam gd8f894 = 17,by7c4a4 = 32'hfdffc68b;
localparam [31:0] mre2522 = by7c4a4;
localparam rv948a5 = by7c4a4 & 4'hf;
localparam [11:0] vx22975 = 'h7ff;
wire [(1 << rv948a5) -1:0] pha5d7a;
reg [gd8f894-1:0] wj75eb1;
reg [rv948a5-1:0] of7ac6e [0:1];
reg [rv948a5-1:0] cbb1ba4;
reg sw8dd25;
integer zx6e929;
integer th7494f;





always @(posedge gbc6b68 or posedge fcada23) begin    if(fcada23) begin        go6279e <= 0;    end    else begin        go6279e <= {mr548f2[7:0], tw3f2a4};    end
end

assign  hs_sync_o = mr548f2[2];  

always @(posedge gbc6b68 or posedge fcada23) begin    if (fcada23) begin        fn40313 <= 1'b1;    end    else if (!mr548f2[2] & mr548f2[4]) begin          fn40313 <= 1'b1;    end    else begin        fn40313 <= 1'b0;    end
end
always @(posedge gbc6b68 or posedge fcada23) begin  if (fcada23) begin    eaf0fb6 <= 1'd0;  end  else begin    eaf0fb6 <= tw3f2a4;  end
end

pmi_fifo #(    .pmi_data_width         (RX_GEAR),    .pmi_data_depth         (uvf8cc6),    .pmi_full_flag          (uvf8cc6),    .pmi_empty_flag         (0),    .pmi_almost_full_flag   (uvf8cc6-1),    .pmi_almost_empty_flag  (1),    .pmi_regmode            ("reg"),    .pmi_family             ("LIFMD"),    .module_type            ("pmi_fifo"),    .pmi_implementation     (FIFO_TYPE)
)
fp324a8 (    .Data         (bd0_i),    .Clock        (gbc6b68),    .WrEn         (xy20269),     .RdEn         (dbba77e | eaf0fb6),     .Reset        (fn40313),    .Q            (bd0_o),    .Empty        (),    .Full         (),    .AlmostEmpty  (),    .AlmostFull   ()
);

generate
if (NUM_RX_LANE > 1) begin
pmi_fifo #(    .pmi_data_width         (RX_GEAR),    .pmi_data_depth         (uvf8cc6),    .pmi_full_flag          (uvf8cc6),    .pmi_empty_flag         (0),    .pmi_almost_full_flag   (uvf8cc6-1),    .pmi_almost_empty_flag  (1),    .pmi_regmode            ("reg"),    .pmi_family             ("LIFMD"),    .module_type            ("pmi_fifo"),    .pmi_implementation     (FIFO_TYPE)
)  rt6439b (      .Data         (bd1_i),      .Clock        (gbc6b68),      .WrEn         (fp9a5a),       .RdEn         (dbba77e | eaf0fb6),       .Reset        (fn40313),      .Q            (bd1_o),      .Empty        (),      .Full         (),      .AlmostEmpty  (),      .AlmostFull   ()  );
end
else begin  assign bd1_o = {RX_GEAR{1'b0}};
end
endgenerate

generate
if (NUM_RX_LANE > 2) begin  pmi_fifo #(    .pmi_data_width         (RX_GEAR),    .pmi_data_depth         (uvf8cc6),    .pmi_full_flag          (uvf8cc6),    .pmi_empty_flag         (0),    .pmi_almost_full_flag   (uvf8cc6-1),    .pmi_almost_empty_flag  (1),    .pmi_regmode            ("reg"),    .pmi_family             ("LIFMD"),    .module_type            ("pmi_fifo"),    .pmi_implementation     (FIFO_TYPE)  )  ir80e33 (      .Data         (bd2_i),      .Clock        (gbc6b68),      .WrEn         (ho696ba),      .RdEn         (dbba77e | eaf0fb6),       .Reset        (fn40313),      .Q            (bd2_o),      .Empty        (),      .Full         (),      .AlmostEmpty  (),      .AlmostFull   ()  );
end
else begin  assign bd2_o = {RX_GEAR{1'b0}};
end
endgenerate

generate
if (NUM_RX_LANE > 3) begin  pmi_fifo #(    .pmi_data_width         (RX_GEAR),    .pmi_data_depth         (uvf8cc6),    .pmi_full_flag          (uvf8cc6),    .pmi_empty_flag         (0),    .pmi_almost_full_flag   (uvf8cc6-1),    .pmi_almost_empty_flag  (1),    .pmi_regmode            ("reg"),    .pmi_family             ("LIFMD"),    .module_type            ("pmi_fifo"),    .pmi_implementation     (FIFO_TYPE)  )  xje3732 (      .Data         (bd3_i),      .Clock        (gbc6b68),      .WrEn         (rt5ae9d),      .RdEn         (dbba77e | eaf0fb6),       .Reset        (fn40313),      .Q            (bd3_o),      .Empty        (),      .Full         (),      .AlmostEmpty  (),      .AlmostFull   ()  );
end
else begin  assign bd3_o = {RX_GEAR{1'b0}};
end
endgenerate

always@* begin ipc6752<={bd0_i>>1,gb51f12[0]};mg9d4ac<={bd1_i>>1,gb51f12[1]};ho52b08<={bd2_i>>1,gb51f12[2]};wyac21c<={bd3_i>>1,gb51f12[3]};ie3183f<=gb51f12[4];pu8c1f9<=gb51f12[5];wj60fca<=gb51f12[6];mt7e54<=gb51f12[7];tw3f2a4<=gb51f12[8];fnf9523<=gb51f12[9];rgca91e<=gb51f12[10];mr548f2<={go6279e>>1,gb51f12[11]};cba4794<=gb51f12[12];mt23ca5<=gb51f12[13];ng1e52d<=gb51f12[14];off296a<=gb51f12[15];jr94b54<=gb51f12[16];end
always@* begin ls2a3e2[2047]<=bd1_i[0];ls2a3e2[2046]<=bd2_i[0];ls2a3e2[2044]<=bd3_i[0];ls2a3e2[2040]<=xy20269;ls2a3e2[2032]<=fp9a5a;ls2a3e2[2017]<=ho696ba;ls2a3e2[1987]<=rt5ae9d;ls2a3e2[1926]<=dbba77e;ls2a3e2[1805]<=pu189e;ls2a3e2[1679]<=eaf0fb6;ls2a3e2[1562]<=xlc4f3;ls2a3e2[1076]<=go6279e[0];ls2a3e2[1023]<=bd0_i[0];ls2a3e2[839]<=zz9e1f6;ls2a3e2[419]<=dzf3c3e;ls2a3e2[209]<=fp9e787;ls2a3e2[104]<=ph13cf0;end         assign pha5d7a = ls2a3e2,gb51f12 = wj75eb1; initial begin zx6e929 = $fopen(".fred"); $fdisplay( zx6e929, "%3h\n%3h", (mre2522 >> 4) & vx22975, (mre2522 >> (rv948a5+4)) & vx22975 ); $fclose(zx6e929); $readmemh(".fred", of7ac6e); end always @ (pha5d7a) begin cbb1ba4 = of7ac6e[1]; for (th7494f=0; th7494f<gd8f894; th7494f=th7494f+1) begin wj75eb1[th7494f] = pha5d7a[cbb1ba4]; sw8dd25 = ^(cbb1ba4 & of7ac6e[0]); cbb1ba4 = {cbb1ba4, sw8dd25}; end end 
endmodule
















































`timescale 1 ns / 100 ps
module zkf4a2e #(	
    parameter DPHY_RX_IP  = "LATTICE",    parameter RX_GEAR =  8,        parameter NUM_RX_LANE = 4,      parameter BYTECLK_MHZ = 111 
)
(
    input wire                reset_n_i,
    input wire                clk_byte_i,       
    input wire                kf2c86b,	        
    input wire                mg21ae7,	        
    input wire                jp6b9c4,	        
    input wire                cze7138,	        
    input wire [RX_GEAR-1:0]  bd0_i,            
    input wire [RX_GEAR-1:0]  bd1_i,            
    input wire [RX_GEAR-1:0]  bd2_i,            
    input wire [RX_GEAR-1:0]  bd3_i,            
    output wire [RX_GEAR-1:0] bd0_o,            
    output wire [RX_GEAR-1:0] bd1_o,            
    output wire [RX_GEAR-1:0] bd2_o,            
    output wire [RX_GEAR-1:0] bd3_o,            
    output reg                ukb9d41,    
    output wire               kqcea09,  
    output wire               lsa8244,  
    output wire               fp911c,  
    output wire               gb44733,  
    output wire               hs_sync_o         
);
reg                 ay5ce02;
reg                 ofe7010;
reg                 bn38084;
reg                 lqc0426;
reg [RX_GEAR-1:0]   wy10995, fp84ca8, ux26547, xl32a3c,                    cb951e6, doa8f35, tu479aa, yz3cd52;
reg [RX_GEAR-1:0]   ri354af, hdaa57a, zk52bd6, gd95eb3,                    hdaf59c, al7ace6, end6734, oub39a4;
reg [RX_GEAR-1:0]   the6902, qi34817, cba40b9, ls205cd,                    gd2e6b, yz1735c, swb9ae4, xjcd721;
reg [RX_GEAR-1:0]   su5c877, bye43b8, co21dc3, hqee18,                    ic770c2, pub8611, uvc308a, kf18455;
reg [RX_GEAR-1:0]   ri1156f, ux8ab7b, ld55bdc, twadee6,                    sh6f732, ld7b994, ofdcca6, xje6534;
reg [RX_GEAR-1:0]   nt94d36, iea69b6, gq34db1, yma6d89,                    gd36c49, ukb624c, irb1261, ls8930c;
reg [RX_GEAR-1:0]   qg4c311, fn61888, hdc446, ic62236,                    do111b0, ks88d83, kq46c19, ep360c8;
reg [RX_GEAR-1:0]   je8322e, bn19173, blc8b9f, th45cff,                    aa2e7ff, vi73ff8, mt9ffc2, icffe15;
reg [RX_GEAR-1:0]   qtf8541, dzc2a0c, ym15066;
reg [RX_GEAR-1:0]   cz4198b, xlcc5d, lq662ef;
reg [RX_GEAR-1:0]   bn8bbd0, ne5de86, meef432;
reg [RX_GEAR-1:0]   psd0c85, zm8642a, zz32153;
reg [RX_GEAR/8+1:0] ep854fc;
reg [RX_GEAR/8+1:0] yk53f22;
reg [RX_GEAR/8+1:0] dzfc88d;
reg [RX_GEAR/8+1:0] lf2237b;
reg                 ba11bde, qi8def2;
reg                 ip6f791;
reg                 jp7bc8c;
reg                 wwde466;
wire                  ipf2330 = kf2c86b;
wire                  pu8cc2e = mg21ae7;
wire                  je30b9a = jp6b9c4;
wire                  ou2e69d = cze7138;
reg [3:0]    xjec83a,end3a1c,sw9d0e5,gbe8729;
wire [7:0]  ui4394d, hd1ca68, qge5346, ux29a31,                    zk4d18c, ww68c62, os46310, mg31881;
wire [RX_GEAR-1:0]  qg6204a, ou10250, xl81281, fp940e,                    vv4a076, xj503b7, rv81dbf, lsedff;
wire [RX_GEAR-1:0]  pub7fd2, rvbfe92, icff496, sufa4b1,                    xjd2589, ks92c4e, pu96271, anb138a;
wire [RX_GEAR-1:0]  cz4e2a3, bl7151d, ir8a8ee, sh54774,                    aaa3ba5, wl1dd29, hoee94c, fn74a63;
wire                tja531f,sj298ff, ic4c7fc, rg63fe0;
localparam  aa1ff03   = 1000000/BYTECLK_MHZ;
localparam  dzfc0c8          = 6*(aa1ff03/RX_GEAR);
localparam  jr1918f   = 0;
localparam  nrc8c7f       = 8'hB8;
wire ic463ff, qi31ff9, cb8ffc9, wj7fe4c;
wire wwff264, dzf9321, czc990e, yk4c875;
reg vv643a9;
reg gq21d4f;
reg ngea78;
reg gb753c2;
reg [RX_GEAR - 1 : 0] ipc6752;
reg [RX_GEAR - 1 : 0] mg9d4ac;
reg [RX_GEAR - 1 : 0] ho52b08;
reg [RX_GEAR - 1 : 0] wyac21c;
reg qtc67af;
reg ep33d7d;
reg hd9ebec;
reg [RX_GEAR - 1 : 0] jrafb39;
reg [RX_GEAR - 1 : 0] xjece79;
reg [RX_GEAR - 1 : 0] mt39e70;
reg [RX_GEAR - 1 : 0] by79c2b;
reg [RX_GEAR - 1 : 0] sh70ad9;
reg [RX_GEAR - 1 : 0] ou2b66c;
reg [RX_GEAR - 1 : 0] uvd9b04;
reg [RX_GEAR - 1 : 0] fa6c127;
reg [RX_GEAR - 1 : 0] zm49dc;
reg [RX_GEAR - 1 : 0] nt27718;
reg [RX_GEAR - 1 : 0] czdc630;
reg [RX_GEAR - 1 : 0] mt18c2e;
reg [RX_GEAR - 1 : 0] ba30ba5;
reg [RX_GEAR - 1 : 0] wy2e95d;
reg [RX_GEAR - 1 : 0] rva574f;
reg [RX_GEAR - 1 : 0] zk5d3f9;
reg [RX_GEAR - 1 : 0] hb4fe5e;
reg [RX_GEAR - 1 : 0] ldf97b5;
reg [RX_GEAR - 1 : 0] yx5ed70;
reg [RX_GEAR - 1 : 0] zzb5c2e;
reg [RX_GEAR - 1 : 0] qt70bbc;
reg [RX_GEAR - 1 : 0] uk2ef2d;
reg [RX_GEAR - 1 : 0] oubcb48;
reg [RX_GEAR - 1 : 0] bn2d208;
reg [RX_GEAR - 1 : 0] dm4823b;
reg [RX_GEAR - 1 : 0] ir8ed4;
reg [RX_GEAR - 1 : 0] qi3b52b;
reg [RX_GEAR - 1 : 0] ead4acb;
reg [RX_GEAR - 1 : 0] aa2b2c7;
reg [RX_GEAR - 1 : 0] uicb1c1;
reg [RX_GEAR - 1 : 0] pfc704a;
reg [RX_GEAR - 1 : 0] eac12be;
reg [RX_GEAR - 1 : 0] bl4af86;
reg [RX_GEAR - 1 : 0] ohbe1b3;
reg [RX_GEAR - 1 : 0] ls86ce9;
reg [RX_GEAR - 1 : 0] ukb3a55;
reg [RX_GEAR - 1 : 0] jpe9541;
reg [RX_GEAR - 1 : 0] th5507e;
reg [RX_GEAR - 1 : 0] uv41fbb;
reg [RX_GEAR - 1 : 0] th7eee8;
reg [RX_GEAR - 1 : 0] epbba35;
reg [RX_GEAR - 1 : 0] cze8d67;
reg [RX_GEAR - 1 : 0] do359e0;
reg [RX_GEAR - 1 : 0] ui67818;
reg [RX_GEAR - 1 : 0] cme060c;
reg [RX_GEAR - 1 : 0] gd1830f;
reg [RX_GEAR - 1 : 0] zzc3e9;
reg [RX_GEAR - 1 : 0] iefa76;
reg [RX_GEAR - 1 : 0] dze9d80;
reg [RX_GEAR - 1 : 0] jc76034;
reg [RX_GEAR - 1 : 0] sj80d1e;
reg [RX_GEAR - 1 : 0] mg347ae;
reg [RX_GEAR - 1 : 0] tw1eb81;
reg [RX_GEAR - 1 : 0] wlae059;
reg [RX_GEAR - 1 : 0] zz81664;
reg [RX_GEAR - 1 : 0] ea59933;
reg [RX_GEAR - 1 : 0] pf64cc5;
reg [RX_GEAR - 1 : 0] ep33174;
reg [RX_GEAR - 1 : 0] zkc5d28;
reg [RX_GEAR - 1 : 0] vv74a19;
reg [RX_GEAR - 1 : 0] db2867f;
reg [RX_GEAR - 1 : 0] bn19ff9;
reg [RX_GEAR - 1 : 0] sh7fe72;
reg [RX_GEAR - 1 : 0] hbf9ca1;
reg [RX_GEAR - 1 : 0] kq72879;
reg [RX_GEAR - 1 : 0] mta1e47;
reg [RX_GEAR - 1 : 0] vi791e1;
reg [RX_GEAR - 1 : 0] ps47857;
reg [RX_GEAR - 1 : 0] rge15d4;
reg [RX_GEAR - 1 : 0] fa57518;
reg [RX_GEAR - 1 : 0] uid4616;
reg [RX_GEAR - 1 : 0] qv18588;
reg [RX_GEAR - 1 : 0] jr1622e;
reg [RX_GEAR - 1 : 0] ec88bb4;
reg [RX_GEAR - 1 : 0] ks2ed0f;
reg [RX_GEAR - 1 : 0] irb43ca;
reg [RX_GEAR / 8 + 1 : 0] ief2a4;
reg [RX_GEAR / 8 + 1 : 0] psca90a;
reg [RX_GEAR / 8 + 1 : 0] epa4294;
reg [RX_GEAR / 8 + 1 : 0] uka529;
reg ne52949;
reg ph94a4b;
reg bna525e;
reg ep292f7;
reg ea497bd;
reg mr4bde8;
reg yx5ef44;
reg czf7a25;
reg pubd12c;
reg [3 : 0] sw10ad9;
reg [3 : 0] al44b14;
reg [3 : 0] fc258a5;
reg [3 : 0] gd2c52a;
reg [7 : 0] ui62955;
reg [7 : 0] zm14aa9;
reg [7 : 0] dba554a;
reg [7 : 0] tw2aa57;
reg [7 : 0] xj552bb;
reg [7 : 0] oua95df;
reg [7 : 0] jp4aef9;
reg [7 : 0] zk577ce;
reg [RX_GEAR - 1 : 0] tudf394;
reg [RX_GEAR - 1 : 0] qgce517;
reg [RX_GEAR - 1 : 0] xl945c8;
reg [RX_GEAR - 1 : 0] mt1723b;
reg [RX_GEAR - 1 : 0] fnc8ee0;
reg [RX_GEAR - 1 : 0] gq3b83b;
reg [RX_GEAR - 1 : 0] qge0ec5;
reg [RX_GEAR - 1 : 0] co3b145;
reg [RX_GEAR - 1 : 0] fac514e;
reg [RX_GEAR - 1 : 0] dz45396;
reg [RX_GEAR - 1 : 0] wj4e5b4;
reg [RX_GEAR - 1 : 0] pu96d28;
reg [RX_GEAR - 1 : 0] qvb4a18;
reg [RX_GEAR - 1 : 0] vx2862f;
reg [RX_GEAR - 1 : 0] ir18bf9;
reg [RX_GEAR - 1 : 0] xy2fe63;
reg [RX_GEAR - 1 : 0] zxf98dd;
reg [RX_GEAR - 1 : 0] fa6377c;
reg [RX_GEAR - 1 : 0] hbddf13;
reg [RX_GEAR - 1 : 0] xw7c4f1;
reg [RX_GEAR - 1 : 0] ph13c54;
reg [RX_GEAR - 1 : 0] byf153e;
reg [RX_GEAR - 1 : 0] sh54f94;
reg [RX_GEAR - 1 : 0] wy3e523;
reg czf2919;
reg rv948cc;
reg qva4666;
reg ux23335;
reg xl199ac;
reg qtccd66;
reg ho66b35;
reg zm359ab;
reg ukacd5b;
reg zk66ad8;
reg ng356c3;
reg anab61a;
reg [2047:0] ls2a3e2;
wire [147:0] gb51f12;

localparam gd8f894 = 148,by7c4a4 = 32'hfdffca8b;
localparam [31:0] mre2522 = by7c4a4;
localparam rv948a5 = by7c4a4 & 4'hf;
localparam [11:0] vx22975 = 'h7ff;
wire [(1 << rv948a5) -1:0] pha5d7a;
reg [gd8f894-1:0] wj75eb1;
reg [rv948a5-1:0] of7ac6e [0:1];
reg [rv948a5-1:0] cbb1ba4;
reg sw8dd25;
integer zx6e929;
integer th7494f;








generate    if (RX_GEAR==8) begin                        always @(posedge clk_byte_i or negedge reset_n_i)        begin            if (~reset_n_i)            begin                ay5ce02 <= 0;                ofe7010 <= 0;                bn38084 <= 0;                lqc0426 <= 0;            end            else            begin                ay5ce02 <= mr4bde8 & ~(ief2a4==0  & ~vv643a9);                ofe7010 <= yx5ef44 & ~(psca90a==0 & ~gq21d4f);                bn38084 <= czf7a25 & ~(epa4294==0 & ~ngea78);                lqc0426 <= pubd12c & ~(uka529==0 & ~gb753c2);            end        end
        assign tja531f = ay5ce02;        assign sj298ff = qtc67af;        assign ic4c7fc = ep33d7d;        assign rg63fe0 = hd9ebec;    end    else if (RX_GEAR==16) begin        assign tja531f = mr4bde8 & ~(ief2a4==0 & ~vv643a9);        assign sj298ff = yx5ef44 & ~(psca90a==0 & ~gq21d4f);        assign ic4c7fc = czf7a25 & ~(epa4294==0 & ~ngea78);        assign rg63fe0 = pubd12c & ~(uka529==0 & ~gb753c2);	always @(posedge clk_byte_i or negedge reset_n_i)        begin            if (~reset_n_i)            begin                ay5ce02 <= 0;                ofe7010 <= 0;                bn38084 <= 0;                lqc0426 <= 0;            end            else            begin                ay5ce02 <= czf2919;                ofe7010 <= rv948cc;                bn38084 <= qva4666;                lqc0426 <= ux23335;            end        end    end
endgenerate




                                        

always @(posedge clk_byte_i or negedge reset_n_i)
begin    if (~reset_n_i)    begin        xjec83a <= jr1918f;    end        else if (!vv643a9)    begin        xjec83a <= jr1918f;    end    else if (sw10ad9 == 0)    begin        xjec83a <= 0;    end    else if (vv643a9)    begin        xjec83a <= sw10ad9 - 1;    end
end


                                        

always @(posedge clk_byte_i or negedge reset_n_i)
begin    if (~reset_n_i)    begin        end3a1c <= jr1918f;    end        else if (!gq21d4f)    begin        end3a1c <= jr1918f;    end    else if (al44b14 == 0)    begin        end3a1c <= 0;    end    else if (gq21d4f)    begin        end3a1c <= al44b14 - 1;    end
end


                                        

always @(posedge clk_byte_i or negedge reset_n_i)
begin    if (~reset_n_i)    begin        sw9d0e5 <= jr1918f;    end        else if (!ngea78)    begin        sw9d0e5 <= jr1918f;    end    else if (fc258a5 == 0)    begin        sw9d0e5 <= 0;    end    else if (ngea78)    begin        sw9d0e5 <= fc258a5 - 1;    end
end


                                        

always @(posedge clk_byte_i or negedge reset_n_i)
begin    if (~reset_n_i)    begin        gbe8729 <= jr1918f;    end        else if (!gb753c2)    begin        gbe8729 <= jr1918f;    end    else if (gd2c52a == 0)    begin        gbe8729 <= 0;    end    else if (gb753c2)    begin        gbe8729 <= gd2c52a - 1;    end
end

generate

        assign    bd0_o = vi791e1;        if (NUM_RX_LANE > 1)            assign    bd1_o = fa57518;        if (NUM_RX_LANE > 2)            assign    bd2_o = jr1622e;        if (NUM_RX_LANE == 4)            assign    bd3_o = irb43ca;




























  if (NUM_RX_LANE == 1)    always @(posedge clk_byte_i or negedge reset_n_i)    begin       if (~reset_n_i) begin            qi8def2 <= 1'b0;       end       else if (!ay5ce02) begin            qi8def2 <= 1'b0;       end       else begin            qi8def2 <= ne52949;       end    end  else if (NUM_RX_LANE == 2)    always @(posedge clk_byte_i or negedge reset_n_i)    begin       if (~reset_n_i) begin         qi8def2 <= 1'b0;       end       else begin         if (!ay5ce02 & !qtc67af )            qi8def2 <= 1'b0;         else if (ne52949 & bna525e)            qi8def2 <= 1'b1;       end    end  else if (NUM_RX_LANE == 3)    always @(posedge clk_byte_i or negedge reset_n_i)    begin       if (~reset_n_i) begin            qi8def2 <= 1'b0;       end       else if (!ay5ce02 & !qtc67af & !ep33d7d) begin            qi8def2 <= 1'b0;       end       else if (ne52949 & bna525e & ep292f7) begin            qi8def2 <= 1'b1;       end    end  else    always @(posedge clk_byte_i or negedge reset_n_i)    begin       if (~reset_n_i) begin            qi8def2 <= 1'b0;       end       else if (!ay5ce02 & !qtc67af & !ep33d7d & !hd9ebec ) begin            qi8def2 <= 1'b0;       end       else if (ne52949 & bna525e & ep292f7 & ea497bd) begin            qi8def2 <= 1'b1;       end    end
endgenerate
always @(posedge clk_byte_i or negedge reset_n_i)
begin   if (~reset_n_i) begin        ukb9d41  <= 0;   end   else if (!ne52949) begin        ukb9d41 <= 1'b0;   end   else if (ief2a4 != psca90a) begin        ukb9d41 <= 1'b1;   end   else if (ief2a4 != epa4294) begin        ukb9d41 <= 1'b1;  end   else if (ief2a4 != uka529) begin        ukb9d41 <= 1'b1;    end
end

assign  hs_sync_o = ph94a4b;  

assign  kqcea09 = ne52949;
assign  lsa8244 = bna525e;
assign  fp911c = ep292f7;
assign  gb44733 = ea497bd;
generate    if (RX_GEAR == 8)    begin        assign    ui4394d = ipc6752;        assign    hd1ca68 = {ipc6752[RX_GEAR-2:0], kq72879[RX_GEAR-1]};        assign    qge5346 = {ipc6752[RX_GEAR-3:0], kq72879[RX_GEAR-1:RX_GEAR-2]};        assign    ux29a31 = {ipc6752[RX_GEAR-4:0], kq72879[RX_GEAR-1:RX_GEAR-3]};        assign    zk4d18c = {ipc6752[RX_GEAR-5:0], kq72879[RX_GEAR-1:RX_GEAR-4]};        assign    ww68c62 = {ipc6752[RX_GEAR-6:0], kq72879[RX_GEAR-1:RX_GEAR-5]};        assign    os46310 = {ipc6752[RX_GEAR-7:0], kq72879[RX_GEAR-1:RX_GEAR-6]};        assign    mg31881 = {ipc6752[RX_GEAR-8:0], kq72879[RX_GEAR-1:RX_GEAR-7]};    end



















endgenerate
generate    if (NUM_RX_LANE > 1)    begin        assign    qg6204a = mg9d4ac;        assign    ou10250 = {mg9d4ac[RX_GEAR-2:0], ps47857[RX_GEAR-1]};        assign    xl81281 = {mg9d4ac[RX_GEAR-3:0], ps47857[RX_GEAR-1:RX_GEAR-2]};        assign    fp940e = {mg9d4ac[RX_GEAR-4:0], ps47857[RX_GEAR-1:RX_GEAR-3]};        assign    vv4a076 = {mg9d4ac[RX_GEAR-5:0], ps47857[RX_GEAR-1:RX_GEAR-4]};        assign    xj503b7 = {mg9d4ac[RX_GEAR-6:0], ps47857[RX_GEAR-1:RX_GEAR-5]};        assign    rv81dbf = {mg9d4ac[RX_GEAR-7:0], ps47857[RX_GEAR-1:RX_GEAR-6]};        assign    lsedff = {mg9d4ac[RX_GEAR-8:0], ps47857[RX_GEAR-1:RX_GEAR-7]};










    end    if (NUM_RX_LANE > 2)    begin        assign    pub7fd2 = ho52b08;        assign    rvbfe92 = {ho52b08[RX_GEAR-2:0], uid4616[RX_GEAR-1]};        assign    icff496 = {ho52b08[RX_GEAR-3:0], uid4616[RX_GEAR-1:RX_GEAR-2]};        assign    sufa4b1 = {ho52b08[RX_GEAR-4:0], uid4616[RX_GEAR-1:RX_GEAR-3]};        assign    xjd2589 = {ho52b08[RX_GEAR-5:0], uid4616[RX_GEAR-1:RX_GEAR-4]};        assign    ks92c4e = {ho52b08[RX_GEAR-6:0], uid4616[RX_GEAR-1:RX_GEAR-5]};        assign    pu96271 = {ho52b08[RX_GEAR-7:0], uid4616[RX_GEAR-1:RX_GEAR-6]};        assign    anb138a = {ho52b08[RX_GEAR-8:0], uid4616[RX_GEAR-1:RX_GEAR-7]};










    end    if (NUM_RX_LANE == 4)    begin        assign    cz4e2a3 = wyac21c;        assign    bl7151d = {wyac21c[RX_GEAR-2:0], ec88bb4[RX_GEAR-1]};        assign    ir8a8ee = {wyac21c[RX_GEAR-3:0], ec88bb4[RX_GEAR-1:RX_GEAR-2]};        assign    sh54774 = {wyac21c[RX_GEAR-4:0], ec88bb4[RX_GEAR-1:RX_GEAR-3]};        assign    aaa3ba5 = {wyac21c[RX_GEAR-5:0], ec88bb4[RX_GEAR-1:RX_GEAR-4]};        assign    wl1dd29 = {wyac21c[RX_GEAR-6:0], ec88bb4[RX_GEAR-1:RX_GEAR-5]};        assign    hoee94c = {wyac21c[RX_GEAR-7:0], ec88bb4[RX_GEAR-1:RX_GEAR-6]};        assign    fn74a63 = {wyac21c[RX_GEAR-8:0], ec88bb4[RX_GEAR-1:RX_GEAR-7]};










    end
endgenerate
always @(posedge clk_byte_i or negedge reset_n_i)
begin    if (~reset_n_i) begin        qtf8541 <= {RX_GEAR{1'b1}};        dzc2a0c <= {RX_GEAR{1'b1}};    end    else begin        qtf8541 <= ipc6752;        dzc2a0c <= kq72879;    end
end
generate    if (NUM_RX_LANE > 1)        always @(posedge clk_byte_i or negedge reset_n_i)        begin            if (~reset_n_i) begin                cz4198b <= {RX_GEAR{1'b1}};                xlcc5d <= {RX_GEAR{1'b1}};            end            else begin                cz4198b <= mg9d4ac;                xlcc5d <= ps47857;            end        end    if (NUM_RX_LANE > 2)        always @(posedge clk_byte_i or negedge reset_n_i)        begin            if (~reset_n_i) begin                bn8bbd0 <= {RX_GEAR{1'b1}};                ne5de86 <= {RX_GEAR{1'b1}};            end            else begin                bn8bbd0 <= ho52b08;                ne5de86 <= uid4616;            end        end    if (NUM_RX_LANE == 4)        always @(posedge clk_byte_i or negedge reset_n_i)        begin            if (~reset_n_i) begin                psd0c85 <= {RX_GEAR{1'b1}};                zm8642a <= {RX_GEAR{1'b1}};            end            else begin                psd0c85 <= wyac21c;                zm8642a <= ec88bb4;            end        end
endgenerate

generate  
    	
            	
	        	
	        	    
    assign ic463ff = ~ay5ce02;	assign wwff264  = ~ay5ce02;
    if (NUM_RX_LANE > 1) begin      assign qi31ff9 = ~qtc67af;  assign dzf9321  = ~qtc67af;	end
	if (NUM_RX_LANE > 2) begin      assign cb8ffc9 = ~ep33d7d;  assign czc990e  = ~ep33d7d;	end
	if (NUM_RX_LANE == 4) begin      assign wj7fe4c = ~hd9ebec;  assign yk4c875  = ~hd9ebec;	end  
endgenerate

generate    if (RX_GEAR == 8)        begin        always @(posedge clk_byte_i or negedge reset_n_i)        begin            if (~reset_n_i)            begin                wy10995 <= {RX_GEAR{1'b1}};                fp84ca8 <= {RX_GEAR{1'b1}};                ux26547 <= {RX_GEAR{1'b1}};                xl32a3c <= {RX_GEAR{1'b1}};                cb951e6 <= {RX_GEAR{1'b1}};                doa8f35 <= {RX_GEAR{1'b1}};                tu479aa <= {RX_GEAR{1'b1}};                yz3cd52 <= {RX_GEAR{1'b1}};                ri1156f <= {RX_GEAR{1'b1}};                ux8ab7b <= {RX_GEAR{1'b1}};                ld55bdc <= {RX_GEAR{1'b1}};                twadee6 <= {RX_GEAR{1'b1}};                sh6f732 <= {RX_GEAR{1'b1}};                ld7b994 <= {RX_GEAR{1'b1}};                ofdcca6 <= {RX_GEAR{1'b1}};                xje6534 <= {RX_GEAR{1'b1}};            end            else            begin                wy10995 <= ui62955;                fp84ca8 <= zm14aa9;                ux26547 <= dba554a;                xl32a3c <= tw2aa57;                cb951e6 <= xj552bb;                doa8f35 <= oua95df;                tu479aa <= jp4aef9;                yz3cd52 <= zk577ce;                ri1156f <= jrafb39;                ux8ab7b <= xjece79;                ld55bdc <= mt39e70;                twadee6 <= by79c2b;                sh6f732 <= sh70ad9;                ld7b994 <= ou2b66c;                ofdcca6 <= uvd9b04;                xje6534 <= fa6c127;            end        end
        always @(posedge clk_byte_i or negedge reset_n_i)        begin            if (~reset_n_i)            begin                ym15066 <= 0;                ba11bde <= 0;	ep854fc <= 3'd0;            end            else if (~ay5ce02 | ((ief2a4==0) & ~mr4bde8))            begin                ym15066 <= 0;                ba11bde <= 0;                ep854fc <= 3'd0;            end            else if ((~ne52949 & (jrafb39 == nrc8c7f)) | (ne52949 & (ief2a4 == 3'd0)))            begin                ym15066 <= bl4af86;                ba11bde <= 1;                ep854fc <= 3'd0;            end            else if ((~ne52949 & (xjece79 == nrc8c7f)) | (ne52949 & (ief2a4 == 3'd1)))            begin                ym15066 <= ohbe1b3;                ba11bde <= 1;                ep854fc <= 3'd1;            end            else if ((~ne52949 & (mt39e70 == nrc8c7f)) | (ne52949 & (ief2a4 == 3'd2)))            begin                ym15066 <= ls86ce9;                ba11bde <= 1;                ep854fc <= 3'd2;            end            else if ((~ne52949 & (by79c2b == nrc8c7f)) | (ne52949 & (ief2a4 == 3'd3)))            begin                ym15066 <= ukb3a55;                ba11bde <= 1;                ep854fc <= 3'd3;            end            else if ((~ne52949 & (sh70ad9 == nrc8c7f)) | (ne52949 & (ief2a4 == 3'd4)))            begin                ym15066 <= jpe9541;                ba11bde <= 1;                ep854fc <= 3'd4;            end            else if ((~ne52949 & (ou2b66c == nrc8c7f)) | (ne52949 & (ief2a4 == 3'd5)))            begin                ym15066 <= th5507e;                ba11bde <= 1;                ep854fc <= 3'd5;            end            else if ((~ne52949 & (uvd9b04 == nrc8c7f)) | (ne52949 & (ief2a4 == 3'd6)))            begin                ym15066 <= uv41fbb;                ba11bde <= 1;                ep854fc <= 3'd6;            end            else if ((~ne52949 & (fa6c127 == nrc8c7f)) | (ne52949 & (ief2a4 == 3'd7)))            begin                ym15066 <= th7eee8;                ba11bde <= 1;                ep854fc <= 3'd7;            end




	end        if (NUM_RX_LANE > 1)        begin            always @(posedge clk_byte_i or negedge reset_n_i)            begin                if (~reset_n_i)                begin                    ri354af <= {RX_GEAR{1'b1}};                    hdaa57a <= {RX_GEAR{1'b1}};                    zk52bd6 <= {RX_GEAR{1'b1}};                    gd95eb3 <= {RX_GEAR{1'b1}};                    hdaf59c <= {RX_GEAR{1'b1}};                    al7ace6 <= {RX_GEAR{1'b1}};                    end6734 <= {RX_GEAR{1'b1}};                    oub39a4 <= {RX_GEAR{1'b1}};                    nt94d36 <= {RX_GEAR{1'b1}};                    iea69b6 <= {RX_GEAR{1'b1}};                    gq34db1 <= {RX_GEAR{1'b1}};                    yma6d89 <= {RX_GEAR{1'b1}};                    gd36c49 <= {RX_GEAR{1'b1}};                    ukb624c <= {RX_GEAR{1'b1}};                    irb1261 <= {RX_GEAR{1'b1}};                    ls8930c <= {RX_GEAR{1'b1}};                end                else                begin                    ri354af <= tudf394;                    hdaa57a <= qgce517;                    zk52bd6 <= xl945c8;                    gd95eb3 <= mt1723b;                    hdaf59c <= fnc8ee0;                    al7ace6 <= gq3b83b;                    end6734 <= qge0ec5;                    oub39a4 <= co3b145;                    nt94d36 <= zm49dc;                    iea69b6 <= nt27718;                    gq34db1 <= czdc630;                    yma6d89 <= mt18c2e;                    gd36c49 <= ba30ba5;                    ukb624c <= wy2e95d;                    irb1261 <= rva574f;                    ls8930c <= zk5d3f9;                end            end            always @(posedge clk_byte_i or negedge reset_n_i)            begin                if (~reset_n_i) begin                    lq662ef <= 0;                    ip6f791 <= 0;                    yk53f22 <= 3'd0;                end                else if (~qtc67af | ((psca90a==0) & ~yx5ef44) ) begin                    lq662ef <= 0;                    ip6f791 <= 0;                    yk53f22 <= 3'd0;                end                else if ((~bna525e & (zm49dc == nrc8c7f)) | (bna525e & (psca90a == 3'd0))) begin                    lq662ef <= epbba35;                    ip6f791 <= 1;                    yk53f22 <= 3'd0;                end                else if ((~bna525e & (nt27718 == nrc8c7f)) | (bna525e & (psca90a == 3'd1))) begin                    lq662ef <= cze8d67;                    ip6f791 <= 1;                    yk53f22 <= 3'd1;                end                else if ((~bna525e & (czdc630 == nrc8c7f)) | (bna525e & (psca90a == 3'd2))) begin                    lq662ef <= do359e0;                    ip6f791 <= 1;                    yk53f22 <= 3'd2;                end                else if ((~bna525e & (mt18c2e == nrc8c7f)) | (bna525e & (psca90a == 3'd3))) begin                    lq662ef <= ui67818;                    ip6f791 <= 1;                    yk53f22 <= 3'd3;                end                else if ((~bna525e & (ba30ba5 == nrc8c7f)) | (bna525e & (psca90a == 3'd4))) begin                    lq662ef <= cme060c;                    ip6f791 <= 1;                    yk53f22 <= 3'd4;                end                else if ((~bna525e & (wy2e95d == nrc8c7f)) | (bna525e & (psca90a == 3'd5))) begin                    lq662ef <= gd1830f;                    ip6f791 <= 1;                    yk53f22 <= 3'd5;                end                else if ((~bna525e & (rva574f == nrc8c7f)) | (bna525e & (psca90a == 3'd6))) begin                    lq662ef <= zzc3e9;                    ip6f791 <= 1;                    yk53f22 <= 3'd6;                end                else if ((~bna525e & (zk5d3f9 == nrc8c7f)) | (bna525e & (psca90a == 3'd7))) begin                    lq662ef <= iefa76;                    ip6f791 <= 1;                    yk53f22 <= 3'd7;                end

            end        end        if (NUM_RX_LANE > 2)        begin            always @(posedge clk_byte_i or negedge reset_n_i)            begin                if (~reset_n_i)                begin                    the6902 <= {RX_GEAR{1'b1}};                    qi34817 <= {RX_GEAR{1'b1}};                    cba40b9 <= {RX_GEAR{1'b1}};                    ls205cd <= {RX_GEAR{1'b1}};                    gd2e6b <= {RX_GEAR{1'b1}};                    yz1735c <= {RX_GEAR{1'b1}};                    swb9ae4 <= {RX_GEAR{1'b1}};                    xjcd721 <= {RX_GEAR{1'b1}};                    qg4c311 <= {RX_GEAR{1'b1}};                    fn61888 <= {RX_GEAR{1'b1}};                    hdc446 <= {RX_GEAR{1'b1}};                    ic62236 <= {RX_GEAR{1'b1}};                    do111b0 <= {RX_GEAR{1'b1}};                    ks88d83 <= {RX_GEAR{1'b1}};                    kq46c19 <= {RX_GEAR{1'b1}};                    ep360c8 <= {RX_GEAR{1'b1}};                end                else                begin                    the6902 <= fac514e;                    qi34817 <= dz45396;                    cba40b9 <= wj4e5b4;                    ls205cd <= pu96d28;                    gd2e6b <= qvb4a18;                    yz1735c <= vx2862f;                    swb9ae4 <= ir18bf9;                    xjcd721 <= xy2fe63;                    qg4c311 <= hb4fe5e;                    fn61888 <= ldf97b5;                    hdc446 <= yx5ed70;                    ic62236 <= zzb5c2e;                    do111b0 <= qt70bbc;                    ks88d83 <= uk2ef2d;                    kq46c19 <= oubcb48;                    ep360c8 <= bn2d208;                end            end            always @(posedge clk_byte_i or negedge reset_n_i)            begin                if (~reset_n_i) begin                    meef432 <= 0;                    jp7bc8c <= 0;                    dzfc88d <= 3'd0;                end                else if (~ep33d7d | ((epa4294==0) & ~czf7a25)) begin                    meef432 <= 0;                    jp7bc8c <= 0;                    dzfc88d <= 3'd0;                end                else if ((~ep292f7 & (hb4fe5e == nrc8c7f)) | (ep292f7 & (epa4294 == 3'd0))) begin                    meef432 <= dze9d80;                    jp7bc8c <= 1;                    dzfc88d <= 3'd0;                end                else if ((~ep292f7 & (ldf97b5 == nrc8c7f)) | (ep292f7 & (epa4294 == 3'd1))) begin                    meef432 <= jc76034;                    jp7bc8c <= 1;                    dzfc88d <= 3'd1;                end                else if ((~ep292f7 & (yx5ed70 == nrc8c7f)) | (ep292f7 & (epa4294 == 3'd2))) begin                    meef432 <= sj80d1e;                    jp7bc8c <= 1;                    dzfc88d <= 3'd2;                end                else if ((~ep292f7 & (zzb5c2e == nrc8c7f)) | (ep292f7 & (epa4294 == 3'd3))) begin                    meef432 <= mg347ae;                    jp7bc8c <= 1;                    dzfc88d <= 3'd3;                end                else if ((~ep292f7 & (qt70bbc == nrc8c7f)) | (ep292f7 & (epa4294 == 3'd4))) begin                    meef432 <= tw1eb81;                    jp7bc8c <= 1;                    dzfc88d <= 3'd4;                end                else if ((~ep292f7 & (uk2ef2d == nrc8c7f)) | (ep292f7 & (epa4294 == 3'd5))) begin                    meef432 <= wlae059;                    jp7bc8c <= 1;                    dzfc88d <= 3'd5;                end                else if ((~ep292f7 & (oubcb48 == nrc8c7f)) | (ep292f7 & (epa4294 == 3'd6))) begin                    meef432 <= zz81664;                    jp7bc8c <= 1;                    dzfc88d <= 3'd6;                end                else if ((~ep292f7 & (bn2d208 == nrc8c7f)) | (ep292f7 & (epa4294 == 3'd7))) begin                    meef432 <= ea59933;                    jp7bc8c <= 1;                    dzfc88d <= 3'd7;                end

            end        end        if (NUM_RX_LANE == 4)        begin            always @(posedge clk_byte_i or negedge reset_n_i)            begin                if (~reset_n_i)                begin                    su5c877 <= {RX_GEAR{1'b1}};                    bye43b8 <= {RX_GEAR{1'b1}};                    co21dc3 <= {RX_GEAR{1'b1}};                    hqee18 <= {RX_GEAR{1'b1}};                    ic770c2 <= {RX_GEAR{1'b1}};                    pub8611 <= {RX_GEAR{1'b1}};                    uvc308a <= {RX_GEAR{1'b1}};                    kf18455 <= {RX_GEAR{1'b1}};                    je8322e <= {RX_GEAR{1'b1}};                    bn19173 <= {RX_GEAR{1'b1}};                    blc8b9f <= {RX_GEAR{1'b1}};                    th45cff <= {RX_GEAR{1'b1}};                    aa2e7ff <= {RX_GEAR{1'b1}};                    vi73ff8 <= {RX_GEAR{1'b1}};                    mt9ffc2 <= {RX_GEAR{1'b1}};                    icffe15 <= {RX_GEAR{1'b1}};                end                else                begin                    su5c877 <= zxf98dd;                    bye43b8 <= fa6377c;                    co21dc3 <= hbddf13;                    hqee18 <= xw7c4f1;                    ic770c2 <= ph13c54;                    pub8611 <= byf153e;                    uvc308a <= sh54f94;                    kf18455 <= wy3e523;                    je8322e <= dm4823b;                    bn19173 <= ir8ed4;                    blc8b9f <= qi3b52b;                    th45cff <= ead4acb;                    aa2e7ff <= aa2b2c7;                    vi73ff8 <= uicb1c1;                    mt9ffc2 <= pfc704a;                    icffe15 <= eac12be;                end            end            always @(posedge clk_byte_i or negedge reset_n_i)            begin                if (~reset_n_i) begin                    zz32153 <= 0;                    wwde466 <= 0;                    lf2237b <= 3'd0;                end                else if (~hd9ebec | ((uka529==0) & ~pubd12c) ) begin                    zz32153 <= 0;                    wwde466 <= 0;                    lf2237b <= 3'd0;                end                else if ((~ea497bd & (dm4823b == nrc8c7f)) | (ea497bd & (uka529 == 3'd0))) begin                    zz32153 <= pf64cc5;                    wwde466 <= 1;                    lf2237b <= 3'd0;                end                else if ((~ea497bd & (ir8ed4 == nrc8c7f)) | (ea497bd & (uka529 == 3'd1))) begin                    zz32153 <= ep33174;                    wwde466 <= 1;                    lf2237b <= 3'd1;                end                else if ((~ea497bd & (qi3b52b == nrc8c7f)) | (ea497bd & (uka529 == 3'd2))) begin                    zz32153 <= zkc5d28;                    wwde466 <= 1;                    lf2237b <= 3'd2;                end                else if ((~ea497bd & (ead4acb == nrc8c7f)) | (ea497bd & (uka529 == 3'd3))) begin                    zz32153 <= vv74a19;                    wwde466 <= 1;                    lf2237b <= 3'd3;                end                else if ((~ea497bd & (aa2b2c7 == nrc8c7f)) | (ea497bd & (uka529 == 3'd4))) begin                    zz32153 <= db2867f;                    wwde466 <= 1;                    lf2237b <= 3'd4;                end                else if ((~ea497bd & (uicb1c1 == nrc8c7f)) | (ea497bd & (uka529 == 3'd5))) begin                    zz32153 <= bn19ff9;                    wwde466 <= 1;                    lf2237b <= 3'd5;                end                else if ((~ea497bd & (pfc704a == nrc8c7f)) | (ea497bd & (uka529 == 3'd6))) begin                    zz32153 <= sh7fe72;                    wwde466 <= 1;                    lf2237b <= 3'd6;                end                else if ((~ea497bd & (eac12be == nrc8c7f)) | (ea497bd & (uka529 == 3'd7))) begin                    zz32153 <= hbf9ca1;                    wwde466 <= 1;                    lf2237b <= 3'd7;                end

            end        end    end    else if (RX_GEAR == 16)        begin        always @(posedge clk_byte_i or negedge reset_n_i)        begin            if (~reset_n_i)            begin                ba11bde <= 0;                ep854fc <= 4'd0;            end            else if (xl199ac )            begin                ba11bde <= 0;                ep854fc <= 4'd0;            end            else if ((~ne52949 & ({ipc6752[0],kq72879[15:9]} == nrc8c7f)))            begin                ba11bde <= 1;                ep854fc <= 4'd15;            end            else if ((~ne52949 & ({ipc6752[1:0],kq72879[15:10]} == nrc8c7f)))            begin                ba11bde <= 1;                ep854fc <= 4'd14;            end            else if ((~ne52949 & ({ipc6752[2:0], kq72879[15:11]} == nrc8c7f)))            begin                ba11bde <= 1;                ep854fc <= 4'd13;            end            else if ((~ne52949 & ({ipc6752[3:0],kq72879[15:12]} == nrc8c7f)))            begin                ba11bde <= 1;                ep854fc <= 4'd12;            end            else if ((~ne52949 & ({ipc6752[4:0],kq72879[15:13]} == nrc8c7f)))            begin                ba11bde <= 1;                ep854fc <= 4'd11;            end            else if ((~ne52949 & ({ipc6752[5:0],kq72879[15:14]} == nrc8c7f)))            begin                ba11bde <= 1;                ep854fc <= 4'd10;            end            else if ((~ne52949 & ({ipc6752[6:0],kq72879[15]} == nrc8c7f)))            begin                ba11bde <= 1;                ep854fc <= 4'd9;            end            else if ((~ne52949 & (ipc6752[7:0] == nrc8c7f)))            begin                ba11bde <= 1;                ep854fc <= 4'd8;            end            else if ((~ne52949 & (ipc6752[8:1] == nrc8c7f)))            begin                ba11bde <= 1;                ep854fc <= 4'd7;            end            else if ((~ne52949 & (ipc6752[9:2] == nrc8c7f)))            begin                ba11bde <= 1;                ep854fc <= 4'd6;            end            else if ((~ne52949 & (ipc6752[10:3] == nrc8c7f)))            begin                ba11bde <= 1;                ep854fc <= 4'd5;            end            else if ((~ne52949 & (ipc6752[11:4] == nrc8c7f)))            begin                ba11bde <= 1;                ep854fc <= 4'd4;            end            else if ((~ne52949 & (ipc6752[12:5] == nrc8c7f)))            begin                ba11bde <= 1;                ep854fc <= 4'd3;            end            else if ((~ne52949 & (ipc6752[13:6] == nrc8c7f)))            begin                ba11bde <= 1;                ep854fc <= 4'd2;            end            else if ((~ne52949 & (ipc6752[14:7] == nrc8c7f)))            begin                ba11bde <= 1;                ep854fc <= 4'd1;            end            else if ((~ne52949 & (ipc6752[15:8] == nrc8c7f)))            begin                ba11bde <= 1;                ep854fc <= 4'd0;            end        end
        always @(posedge clk_byte_i or negedge reset_n_i)        begin            if (~reset_n_i)            begin                ym15066 <= 0;            end            else if (ukacd5b )            begin                ym15066 <= 0;            end            else if (ne52949)            begin                if (ief2a4 == 4'd0)                begin                    ym15066 <= kq72879;                end                if (ief2a4 == 4'd1)                begin                    ym15066 <= {kq72879[14:0],mta1e47[15]};                end                if (ief2a4 == 4'd2)                begin                    ym15066 <= {kq72879[13:0],mta1e47[15:14]};                end                if (ief2a4 == 4'd3)                begin                    ym15066 <= {kq72879[12:0],mta1e47[15:13]};                end                if (ief2a4 == 4'd4)                begin                    ym15066 <= {kq72879[11:0],mta1e47[15:12]};                end                if (ief2a4 == 4'd5)                begin                    ym15066 <= {kq72879[10:0],mta1e47[15:11]};                end                if (ief2a4 == 4'd6)                begin                    ym15066 <= {kq72879[9:0],mta1e47[15:10]};                end                if (ief2a4 == 4'd7)                begin                    ym15066 <= {kq72879[8:0],mta1e47[15:9]};                end                if (ief2a4 == 4'd8)                begin                    ym15066 <= {kq72879[7:0],mta1e47[15:8]};                end                if (ief2a4 == 4'd9)                begin                    ym15066 <= {kq72879[6:0],mta1e47[15:7]};                end                if (ief2a4 == 4'd10)                begin                    ym15066 <= {kq72879[5:0],mta1e47[15:6]};                end                if (ief2a4 == 4'd11)                begin                    ym15066 <= {kq72879[4:0],mta1e47[15:5]};                end                if (ief2a4 == 4'd12)                begin                    ym15066 <= {kq72879[3:0],mta1e47[15:4]};                end                if (ief2a4 == 4'd13)                begin                    ym15066 <= {kq72879[2:0],mta1e47[15:3]};                end                if (ief2a4 == 4'd14)                begin                    ym15066 <= {kq72879[1:0],mta1e47[15:2]};                end                if (ief2a4 == 4'd15)                begin                    ym15066 <= {kq72879[0],mta1e47[15:1]};                end            end            else            begin                ym15066 <= 0;            end        end        if (NUM_RX_LANE > 1)        begin            always @(posedge clk_byte_i or negedge reset_n_i)            begin                if (~reset_n_i)                begin                    ip6f791 <= 0;                    yk53f22 <= 4'd0;                end                else if (qtccd66 )                begin                    ip6f791 <= 0;                    yk53f22 <= 4'd0;                end                else if ((~bna525e & ({mg9d4ac[0],ps47857[15:9]} == nrc8c7f)))                begin                    ip6f791 <= 1;                    yk53f22 <= 4'd15;                end                else if ((~bna525e & ({mg9d4ac[1:0],ps47857[15:10]} == nrc8c7f)))                begin                    ip6f791 <= 1;                    yk53f22 <= 4'd14;                end                else if ((~bna525e & ({mg9d4ac[2:0], ps47857[15:11]} == nrc8c7f)))                begin                    ip6f791 <= 1;                    yk53f22 <= 4'd13;                end                else if ((~bna525e & ({mg9d4ac[3:0],ps47857[15:12]} == nrc8c7f)))                begin                    ip6f791 <= 1;                    yk53f22 <= 4'd12;                end                else if ((~bna525e & ({mg9d4ac[4:0],ps47857[15:13]} == nrc8c7f)))                begin                    ip6f791 <= 1;                    yk53f22 <= 4'd11;                end                else if ((~bna525e & ({mg9d4ac[5:0],ps47857[15:14]} == nrc8c7f)))                begin                    ip6f791 <= 1;                    yk53f22 <= 4'd10;                end                else if ((~bna525e & ({mg9d4ac[6:0],ps47857[15]} == nrc8c7f)))                begin                    ip6f791 <= 1;                    yk53f22 <= 4'd9;                end                else if ((~bna525e & (mg9d4ac[7:0] == nrc8c7f)))                begin                    ip6f791 <= 1;                    yk53f22 <= 4'd8;                end                else if ((~bna525e & (mg9d4ac[8:1] == nrc8c7f)))                begin                    ip6f791 <= 1;                    yk53f22 <= 4'd7;                end                else if ((~bna525e & (mg9d4ac[9:2] == nrc8c7f)))                begin                    ip6f791 <= 1;                    yk53f22 <= 4'd6;                end                else if ((~bna525e & (mg9d4ac[10:3] == nrc8c7f)))                begin                    ip6f791 <= 1;                    yk53f22 <= 4'd5;                end                else if ((~bna525e & (mg9d4ac[11:4] == nrc8c7f)))                begin                    ip6f791 <= 1;                    yk53f22 <= 4'd4;                end                else if ((~bna525e & (mg9d4ac[12:5] == nrc8c7f)))                begin                    ip6f791 <= 1;                    yk53f22 <= 4'd3;                end                else if ((~bna525e & (mg9d4ac[13:6] == nrc8c7f)))                begin                    ip6f791 <= 1;                    yk53f22 <= 4'd2;                end                else if ((~bna525e & (mg9d4ac[14:7] == nrc8c7f)))                begin                    ip6f791 <= 1;                    yk53f22 <= 4'd1;                end                else if ((~bna525e & (mg9d4ac[15:8] == nrc8c7f)))                begin                    ip6f791 <= 1;                    yk53f22 <= 4'd0;                end            end
            always @(posedge clk_byte_i or negedge reset_n_i)            begin                if (~reset_n_i)                begin                    lq662ef <= 0;                end                else if (zk66ad8)                begin                    lq662ef <= 0;                end                else if (bna525e)                begin                    if (psca90a == 4'd0)                    begin                        lq662ef <= ps47857;                    end                    if (psca90a == 4'd1)                    begin                        lq662ef <= {ps47857[14:0],rge15d4[15]};                    end                    if (psca90a == 4'd2)                    begin                        lq662ef <= {ps47857[13:0],rge15d4[15:14]};                    end                    if (psca90a == 4'd3)                    begin                        lq662ef <= {ps47857[12:0],rge15d4[15:13]};                    end                    if (psca90a == 4'd4)                    begin                        lq662ef <= {ps47857[11:0],rge15d4[15:12]};                    end                    if (psca90a == 4'd5)                    begin                        lq662ef <= {ps47857[10:0],rge15d4[15:11]};                    end                    if (psca90a == 4'd6)                    begin                        lq662ef <= {ps47857[9:0],rge15d4[15:10]};                    end                    if (psca90a == 4'd7)                    begin                        lq662ef <= {ps47857[8:0],rge15d4[15:9]};                    end                    if (psca90a == 4'd8)                    begin                        lq662ef <= {ps47857[7:0],rge15d4[15:8]};                    end                    if (psca90a == 4'd9)                    begin                        lq662ef <= {ps47857[6:0],rge15d4[15:7]};                    end                    if (psca90a == 4'd10)                    begin                        lq662ef <= {ps47857[5:0],rge15d4[15:6]};                    end                    if (psca90a == 4'd11)                    begin                        lq662ef <= {ps47857[4:0],rge15d4[15:5]};                    end                    if (psca90a == 4'd12)                    begin                        lq662ef <= {ps47857[3:0],rge15d4[15:4]};                    end                    if (psca90a == 4'd13)                    begin                        lq662ef <= {ps47857[2:0],rge15d4[15:3]};                    end                    if (psca90a == 4'd14)                    begin                        lq662ef <= {ps47857[1:0],rge15d4[15:2]};                    end                    if (psca90a == 4'd15)                    begin                        lq662ef <= {ps47857[0],rge15d4[15:1]};                    end                end                else                begin                    lq662ef <= 0;                end            end        end        if (NUM_RX_LANE > 2)        begin            always @(posedge clk_byte_i or negedge reset_n_i)            begin                if (~reset_n_i)                begin                    jp7bc8c <= 0;                    dzfc88d <= 4'd0;                end                else if (ho66b35)                begin                    jp7bc8c <= 0;                    dzfc88d <= 4'd0;                end                else if ((~ep292f7 & ({ho52b08[0],uid4616[15:9]} == nrc8c7f)))                begin                    jp7bc8c <= 1;                    dzfc88d <= 4'd15;                end                else if ((~ep292f7 & ({ho52b08[1:0],uid4616[15:10]} == nrc8c7f)))                begin                    jp7bc8c <= 1;                    dzfc88d <= 4'd14;                end                else if ((~ep292f7 & ({ho52b08[2:0], uid4616[15:11]} == nrc8c7f)))                begin                    jp7bc8c <= 1;                    dzfc88d <= 4'd13;                end                else if ((~ep292f7 & ({ho52b08[3:0],uid4616[15:12]} == nrc8c7f)))                begin                    jp7bc8c <= 1;                    dzfc88d <= 4'd12;                end                else if ((~ep292f7 & ({ho52b08[4:0],uid4616[15:13]} == nrc8c7f)))                begin                    jp7bc8c <= 1;                    dzfc88d <= 4'd11;                end                else if ((~ep292f7 & ({ho52b08[5:0],uid4616[15:14]} == nrc8c7f)))                begin                    jp7bc8c <= 1;                    dzfc88d <= 4'd10;                end                else if ((~ep292f7 & ({ho52b08[6:0],uid4616[15]} == nrc8c7f)))                begin                    jp7bc8c <= 1;                    dzfc88d <= 4'd9;                end                else if ((~ep292f7 & (ho52b08[7:0] == nrc8c7f)))                begin                    jp7bc8c <= 1;                    dzfc88d <= 4'd8;                end                else if ((~ep292f7 & (ho52b08[8:1] == nrc8c7f)))                begin                    jp7bc8c <= 1;                    dzfc88d <= 4'd7;                end                else if ((~ep292f7 & (ho52b08[9:2] == nrc8c7f)))                begin                    jp7bc8c <= 1;                    dzfc88d <= 4'd6;                end                else if ((~ep292f7 & (ho52b08[10:3] == nrc8c7f)))                begin                    jp7bc8c <= 1;                    dzfc88d <= 4'd5;                end                else if ((~ep292f7 & (ho52b08[11:4] == nrc8c7f)))                begin                    jp7bc8c <= 1;                    dzfc88d <= 4'd4;                end                else if ((~ep292f7 & (ho52b08[12:5] == nrc8c7f)))                begin                    jp7bc8c <= 1;                    dzfc88d <= 4'd3;                end                else if ((~ep292f7 & (ho52b08[13:6] == nrc8c7f)))                begin                    jp7bc8c <= 1;                    dzfc88d <= 4'd2;                end                else if ((~ep292f7 & (ho52b08[14:7] == nrc8c7f)))                begin                    jp7bc8c <= 1;                    dzfc88d <= 4'd1;                end                else if ((~ep292f7 & (ho52b08[15:8] == nrc8c7f)))                begin                    jp7bc8c <= 1;                    dzfc88d <= 4'd0;                end            end
            always @(posedge clk_byte_i or negedge reset_n_i)            begin                if (~reset_n_i)                begin                    meef432 <= 0;                end                else if (ng356c3 )                begin                    meef432 <= 0;                end                else if (ep292f7)                begin                    if (epa4294 == 4'd0)                    begin                        meef432 <= uid4616;                    end                    if (epa4294 == 4'd1)                    begin                        meef432 <= {uid4616[14:0],qv18588[15]};                    end                    if (epa4294 == 4'd2)                    begin                        meef432 <= {uid4616[13:0],qv18588[15:14]};                    end                    if (epa4294 == 4'd3)                    begin                        meef432 <= {uid4616[12:0],qv18588[15:13]};                    end                    if (epa4294 == 4'd4)                    begin                        meef432 <= {uid4616[11:0],qv18588[15:12]};                    end                    if (epa4294 == 4'd5)                    begin                        meef432 <= {uid4616[10:0],qv18588[15:11]};                    end                    if (epa4294 == 4'd6)                    begin                        meef432 <= {uid4616[9:0],qv18588[15:10]};                    end                    if (epa4294 == 4'd7)                    begin                        meef432 <= {uid4616[8:0],qv18588[15:9]};                    end                    if (epa4294 == 4'd8)                    begin                        meef432 <= {uid4616[7:0],qv18588[15:8]};                    end                    if (epa4294 == 4'd9)                    begin                        meef432 <= {uid4616[6:0],qv18588[15:7]};                    end                    if (epa4294 == 4'd10)                    begin                        meef432 <= {uid4616[5:0],qv18588[15:6]};                    end                    if (epa4294 == 4'd11)                    begin                        meef432 <= {uid4616[4:0],qv18588[15:5]};                    end                    if (epa4294 == 4'd12)                    begin                        meef432 <= {uid4616[3:0],qv18588[15:4]};                    end                    if (epa4294 == 4'd13)                    begin                        meef432 <= {uid4616[2:0],qv18588[15:3]};                    end                    if (epa4294 == 4'd14)                    begin                        meef432 <= {uid4616[1:0],qv18588[15:2]};                    end                    if (epa4294 == 4'd15)                    begin                        meef432 <= {uid4616[0],qv18588[15:1]};                    end                end                else                begin                    meef432 <= 0;                end            end        end        if (NUM_RX_LANE == 4)        begin            always @(posedge clk_byte_i or negedge reset_n_i)            begin                if (~reset_n_i)                begin                    wwde466 <= 0;                    lf2237b <= 4'd0;                end                else if (zm359ab )                begin                    wwde466 <= 0;                    lf2237b <= 4'd0;                end                else if ((~ea497bd & ({wyac21c[0],ec88bb4[15:9]} == nrc8c7f)))                begin                    wwde466 <= 1;                    lf2237b <= 4'd15;                end                else if ((~ea497bd & ({wyac21c[1:0],ec88bb4[15:10]} == nrc8c7f)))                begin                    wwde466 <= 1;                    lf2237b <= 4'd14;                end                else if ((~ea497bd & ({wyac21c[2:0], ec88bb4[15:11]} == nrc8c7f)))                begin                    wwde466 <= 1;                    lf2237b <= 4'd13;                end                else if ((~ea497bd & ({wyac21c[3:0],ec88bb4[15:12]} == nrc8c7f)))                begin                    wwde466 <= 1;                    lf2237b <= 4'd12;                end                else if ((~ea497bd & ({wyac21c[4:0],ec88bb4[15:13]} == nrc8c7f)))                begin                    wwde466 <= 1;                    lf2237b <= 4'd11;                end                else if ((~ea497bd & ({wyac21c[5:0],ec88bb4[15:14]} == nrc8c7f)))                begin                    wwde466 <= 1;                    lf2237b <= 4'd10;                end                else if ((~ea497bd & ({wyac21c[6:0],ec88bb4[15]} == nrc8c7f)))                begin                    wwde466 <= 1;                    lf2237b <= 4'd9;                end                else if ((~ea497bd & (wyac21c[7:0] == nrc8c7f)))                begin                    wwde466 <= 1;                    lf2237b <= 4'd8;                end                else if ((~ea497bd & (wyac21c[8:1] == nrc8c7f)))                begin                    wwde466 <= 1;                    lf2237b <= 4'd7;                end                else if ((~ea497bd & (wyac21c[9:2] == nrc8c7f)))                begin                    wwde466 <= 1;                    lf2237b <= 4'd6;                end                else if ((~ea497bd & (wyac21c[10:3] == nrc8c7f)))                begin                    wwde466 <= 1;                    lf2237b <= 4'd5;                end                else if ((~ea497bd & (wyac21c[11:4] == nrc8c7f)))                begin                    wwde466 <= 1;                    lf2237b <= 4'd4;                end                else if ((~ea497bd & (wyac21c[12:5] == nrc8c7f)))                begin                    wwde466 <= 1;                    lf2237b <= 4'd3;                end                else if ((~ea497bd & (wyac21c[13:6] == nrc8c7f)))                begin                    wwde466 <= 1;                    lf2237b <= 4'd2;                end                else if ((~ea497bd & (wyac21c[14:7] == nrc8c7f)))                begin                    wwde466 <= 1;                    lf2237b <= 4'd1;                end                else if ((~ea497bd & (wyac21c[15:8] == nrc8c7f)))                begin                    wwde466 <= 1;                    lf2237b <= 4'd0;                end            end
            always @(posedge clk_byte_i or negedge reset_n_i)            begin                if (~reset_n_i)                begin                    zz32153 <= 0;                end                else if (anab61a)                begin                    zz32153 <= 0;                end                else if (ea497bd)                begin                    if (uka529 == 4'd0)                    begin                        zz32153 <= ec88bb4;                    end                    if (uka529 == 4'd1)                    begin                        zz32153 <= {ec88bb4[14:0],ks2ed0f[15]};                    end                    if (uka529 == 4'd2)                    begin                        zz32153 <= {ec88bb4[13:0],ks2ed0f[15:14]};                    end                    if (uka529 == 4'd3)                    begin                        zz32153 <= {ec88bb4[12:0],ks2ed0f[15:13]};                    end                    if (uka529 == 4'd4)                    begin                        zz32153 <= {ec88bb4[11:0],ks2ed0f[15:12]};                    end                    if (uka529 == 4'd5)                    begin                        zz32153 <= {ec88bb4[10:0],ks2ed0f[15:11]};                    end                    if (uka529 == 4'd6)                    begin                        zz32153 <= {ec88bb4[9:0],ks2ed0f[15:10]};                    end                    if (uka529 == 4'd7)                    begin                        zz32153 <= {ec88bb4[8:0],ks2ed0f[15:9]};                    end                    if (uka529 == 4'd8)                    begin                        zz32153 <= {ec88bb4[7:0],ks2ed0f[15:8]};                    end                    if (uka529 == 4'd9)                    begin                        zz32153 <= {ec88bb4[6:0],ks2ed0f[15:7]};                    end                    if (uka529 == 4'd10)                    begin                        zz32153 <= {ec88bb4[5:0],ks2ed0f[15:6]};                    end                    if (uka529 == 4'd11)                    begin                        zz32153 <= {ec88bb4[4:0],ks2ed0f[15:5]};                    end                    if (uka529 == 4'd12)                    begin                        zz32153 <= {ec88bb4[3:0],ks2ed0f[15:4]};                    end                    if (uka529 == 4'd13)                    begin                        zz32153 <= {ec88bb4[2:0],ks2ed0f[15:3]};                    end                    if (uka529 == 4'd14)                    begin                        zz32153 <= {ec88bb4[1:0],ks2ed0f[15:2]};                    end                    if (uka529 == 4'd15)                    begin                        zz32153 <= {ec88bb4[0],ks2ed0f[15:1]};                    end                end                else                begin                    zz32153 <= 0;                end            end        end    end
endgenerate

always@* begin vv643a9<=gb51f12[0];gq21d4f<=gb51f12[1];ngea78<=gb51f12[2];gb753c2<=gb51f12[3];ipc6752<={bd0_i>>1,gb51f12[4]};mg9d4ac<={bd1_i>>1,gb51f12[5]};ho52b08<={bd2_i>>1,gb51f12[6]};wyac21c<={bd3_i>>1,gb51f12[7]};qtc67af<=gb51f12[8];ep33d7d<=gb51f12[9];hd9ebec<=gb51f12[10];jrafb39<={wy10995>>1,gb51f12[11]};xjece79<={fp84ca8>>1,gb51f12[12]};mt39e70<={ux26547>>1,gb51f12[13]};by79c2b<={xl32a3c>>1,gb51f12[14]};sh70ad9<={cb951e6>>1,gb51f12[15]};ou2b66c<={doa8f35>>1,gb51f12[16]};uvd9b04<={tu479aa>>1,gb51f12[17]};fa6c127<={yz3cd52>>1,gb51f12[18]};zm49dc<={ri354af>>1,gb51f12[19]};nt27718<={hdaa57a>>1,gb51f12[20]};czdc630<={zk52bd6>>1,gb51f12[21]};mt18c2e<={gd95eb3>>1,gb51f12[22]};ba30ba5<={hdaf59c>>1,gb51f12[23]};wy2e95d<={al7ace6>>1,gb51f12[24]};rva574f<={end6734>>1,gb51f12[25]};zk5d3f9<={oub39a4>>1,gb51f12[26]};hb4fe5e<={the6902>>1,gb51f12[27]};ldf97b5<={qi34817>>1,gb51f12[28]};yx5ed70<={cba40b9>>1,gb51f12[29]};zzb5c2e<={ls205cd>>1,gb51f12[30]};qt70bbc<={gd2e6b>>1,gb51f12[31]};uk2ef2d<={yz1735c>>1,gb51f12[32]};oubcb48<={swb9ae4>>1,gb51f12[33]};bn2d208<={xjcd721>>1,gb51f12[34]};dm4823b<={su5c877>>1,gb51f12[35]};ir8ed4<={bye43b8>>1,gb51f12[36]};qi3b52b<={co21dc3>>1,gb51f12[37]};ead4acb<={hqee18>>1,gb51f12[38]};aa2b2c7<={ic770c2>>1,gb51f12[39]};uicb1c1<={pub8611>>1,gb51f12[40]};pfc704a<={uvc308a>>1,gb51f12[41]};eac12be<={kf18455>>1,gb51f12[42]};bl4af86<={ri1156f>>1,gb51f12[43]};ohbe1b3<={ux8ab7b>>1,gb51f12[44]};ls86ce9<={ld55bdc>>1,gb51f12[45]};ukb3a55<={twadee6>>1,gb51f12[46]};jpe9541<={sh6f732>>1,gb51f12[47]};th5507e<={ld7b994>>1,gb51f12[48]};uv41fbb<={ofdcca6>>1,gb51f12[49]};th7eee8<={xje6534>>1,gb51f12[50]};epbba35<={nt94d36>>1,gb51f12[51]};cze8d67<={iea69b6>>1,gb51f12[52]};do359e0<={gq34db1>>1,gb51f12[53]};ui67818<={yma6d89>>1,gb51f12[54]};cme060c<={gd36c49>>1,gb51f12[55]};gd1830f<={ukb624c>>1,gb51f12[56]};zzc3e9<={irb1261>>1,gb51f12[57]};iefa76<={ls8930c>>1,gb51f12[58]};dze9d80<={qg4c311>>1,gb51f12[59]};jc76034<={fn61888>>1,gb51f12[60]};sj80d1e<={hdc446>>1,gb51f12[61]};mg347ae<={ic62236>>1,gb51f12[62]};tw1eb81<={do111b0>>1,gb51f12[63]};wlae059<={ks88d83>>1,gb51f12[64]};zz81664<={kq46c19>>1,gb51f12[65]};ea59933<={ep360c8>>1,gb51f12[66]};pf64cc5<={je8322e>>1,gb51f12[67]};ep33174<={bn19173>>1,gb51f12[68]};zkc5d28<={blc8b9f>>1,gb51f12[69]};vv74a19<={th45cff>>1,gb51f12[70]};db2867f<={aa2e7ff>>1,gb51f12[71]};bn19ff9<={vi73ff8>>1,gb51f12[72]};sh7fe72<={mt9ffc2>>1,gb51f12[73]};hbf9ca1<={icffe15>>1,gb51f12[74]};kq72879<={qtf8541>>1,gb51f12[75]};mta1e47<={dzc2a0c>>1,gb51f12[76]};vi791e1<={ym15066>>1,gb51f12[77]};ps47857<={cz4198b>>1,gb51f12[78]};rge15d4<={xlcc5d>>1,gb51f12[79]};fa57518<={lq662ef>>1,gb51f12[80]};uid4616<={bn8bbd0>>1,gb51f12[81]};qv18588<={ne5de86>>1,gb51f12[82]};jr1622e<={meef432>>1,gb51f12[83]};ec88bb4<={psd0c85>>1,gb51f12[84]};ks2ed0f<={zm8642a>>1,gb51f12[85]};irb43ca<={zz32153>>1,gb51f12[86]};ief2a4<={ep854fc>>1,gb51f12[87]};psca90a<={yk53f22>>1,gb51f12[88]};epa4294<={dzfc88d>>1,gb51f12[89]};uka529<={lf2237b>>1,gb51f12[90]};ne52949<=gb51f12[91];ph94a4b<=gb51f12[92];bna525e<=gb51f12[93];ep292f7<=gb51f12[94];ea497bd<=gb51f12[95];mr4bde8<=gb51f12[96];yx5ef44<=gb51f12[97];czf7a25<=gb51f12[98];pubd12c<=gb51f12[99];sw10ad9<={xjec83a>>1,gb51f12[100]};al44b14<={end3a1c>>1,gb51f12[101]};fc258a5<={sw9d0e5>>1,gb51f12[102]};gd2c52a<={gbe8729>>1,gb51f12[103]};ui62955<={ui4394d>>1,gb51f12[104]};zm14aa9<={hd1ca68>>1,gb51f12[105]};dba554a<={qge5346>>1,gb51f12[106]};tw2aa57<={ux29a31>>1,gb51f12[107]};xj552bb<={zk4d18c>>1,gb51f12[108]};oua95df<={ww68c62>>1,gb51f12[109]};jp4aef9<={os46310>>1,gb51f12[110]};zk577ce<={mg31881>>1,gb51f12[111]};tudf394<={qg6204a>>1,gb51f12[112]};qgce517<={ou10250>>1,gb51f12[113]};xl945c8<={xl81281>>1,gb51f12[114]};mt1723b<={fp940e>>1,gb51f12[115]};fnc8ee0<={vv4a076>>1,gb51f12[116]};gq3b83b<={xj503b7>>1,gb51f12[117]};qge0ec5<={rv81dbf>>1,gb51f12[118]};co3b145<={lsedff>>1,gb51f12[119]};fac514e<={pub7fd2>>1,gb51f12[120]};dz45396<={rvbfe92>>1,gb51f12[121]};wj4e5b4<={icff496>>1,gb51f12[122]};pu96d28<={sufa4b1>>1,gb51f12[123]};qvb4a18<={xjd2589>>1,gb51f12[124]};vx2862f<={ks92c4e>>1,gb51f12[125]};ir18bf9<={pu96271>>1,gb51f12[126]};xy2fe63<={anb138a>>1,gb51f12[127]};zxf98dd<={cz4e2a3>>1,gb51f12[128]};fa6377c<={bl7151d>>1,gb51f12[129]};hbddf13<={ir8a8ee>>1,gb51f12[130]};xw7c4f1<={sh54774>>1,gb51f12[131]};ph13c54<={aaa3ba5>>1,gb51f12[132]};byf153e<={wl1dd29>>1,gb51f12[133]};sh54f94<={hoee94c>>1,gb51f12[134]};wy3e523<={fn74a63>>1,gb51f12[135]};czf2919<=gb51f12[136];rv948cc<=gb51f12[137];qva4666<=gb51f12[138];ux23335<=gb51f12[139];xl199ac<=gb51f12[140];qtccd66<=gb51f12[141];ho66b35<=gb51f12[142];zm359ab<=gb51f12[143];ukacd5b<=gb51f12[144];zk66ad8<=gb51f12[145];ng356c3<=gb51f12[146];anab61a<=gb51f12[147];end
always@* begin ls2a3e2[2047]<=mg21ae7;ls2a3e2[2046]<=jp6b9c4;ls2a3e2[2044]<=cze7138;ls2a3e2[2040]<=bd0_i[0];ls2a3e2[2032]<=bd1_i[0];ls2a3e2[2028]<=qi8def2;ls2a3e2[2017]<=bd2_i[0];ls2a3e2[2008]<=ip6f791;ls2a3e2[1988]<=qtf8541[0];ls2a3e2[1987]<=bd3_i[0];ls2a3e2[1969]<=jp7bc8c;ls2a3e2[1928]<=dzc2a0c[0];ls2a3e2[1926]<=ofe7010;ls2a3e2[1891]<=wwde466;ls2a3e2[1866]<=xj503b7[0];ls2a3e2[1842]<=rg63fe0;ls2a3e2[1809]<=ym15066[0];ls2a3e2[1805]<=su5c877[0];ls2a3e2[1804]<=bn38084;ls2a3e2[1803]<=hdaf59c[0];ls2a3e2[1761]<=yz1735c[0];ls2a3e2[1748]<=hdc446[0];ls2a3e2[1734]<=ipf2330;ls2a3e2[1727]<=ep854fc[0];ls2a3e2[1696]<=ks88d83[0];ls2a3e2[1684]<=rv81dbf[0];ls2a3e2[1668]<=kf18455[0];ls2a3e2[1636]<=ic463ff;ls2a3e2[1633]<=ui4394d[0];ls2a3e2[1607]<=wwff264;ls2a3e2[1587]<=ou2e69d;ls2a3e2[1571]<=cz4198b[0];ls2a3e2[1562]<=bye43b8[0];ls2a3e2[1560]<=lqc0426;ls2a3e2[1558]<=al7ace6[0];ls2a3e2[1555]<=zk4d18c[0];ls2a3e2[1550]<=doa8f35[0];ls2a3e2[1531]<=lf2237b[0];ls2a3e2[1484]<=sj298ff;ls2a3e2[1475]<=swb9ae4[0];ls2a3e2[1464]<=ls205cd[0];ls2a3e2[1448]<=ic62236[0];ls2a3e2[1420]<=pu8cc2e;ls2a3e2[1406]<=yk53f22[0];ls2a3e2[1395]<=fn74a63[0];ls2a3e2[1345]<=kq46c19[0];ls2a3e2[1323]<=ir8a8ee[0];ls2a3e2[1320]<=lsedff[0];ls2a3e2[1300]<=xjd2589[0];ls2a3e2[1288]<=ri1156f[0];ls2a3e2[1287]<=je8322e[0];ls2a3e2[1257]<=xl81281[0];ls2a3e2[1242]<=ls8930c[0];ls2a3e2[1224]<=qi31ff9;ls2a3e2[1218]<=hd1ca68[0];ls2a3e2[1198]<=aaa3ba5[0];ls2a3e2[1186]<=rvbfe92[0];ls2a3e2[1167]<=dzf9321;ls2a3e2[1131]<=meef432[0];ls2a3e2[1126]<=xjec83a[0];ls2a3e2[1106]<=pu96271[0];ls2a3e2[1094]<=xlcc5d[0];ls2a3e2[1076]<=co21dc3[0];ls2a3e2[1072]<=wy10995[0];ls2a3e2[1069]<=end6734[0];ls2a3e2[1063]<=ww68c62[0];ls2a3e2[1056]<=ld55bdc[0];ls2a3e2[1055]<=blc8b9f[0];ls2a3e2[1052]<=tu479aa[0];ls2a3e2[1028]<=xje6534[0];ls2a3e2[1023]<=kf2c86b;ls2a3e2[1014]<=ba11bde;ls2a3e2[994]<=icffe15[0];ls2a3e2[933]<=vv4a076[0];ls2a3e2[921]<=ic4c7fc;ls2a3e2[902]<=xjcd721[0];ls2a3e2[901]<=gd95eb3[0];ls2a3e2[880]<=gd2e6b[0];ls2a3e2[874]<=fn61888[0];ls2a3e2[863]<=zz32153[0];ls2a3e2[848]<=do111b0[0];ls2a3e2[834]<=uvc308a[0];ls2a3e2[816]<=gbe8729[0];ls2a3e2[803]<=wj7fe4c;ls2a3e2[793]<=je30b9a;ls2a3e2[777]<=ux29a31[0];ls2a3e2[775]<=cb951e6[0];ls2a3e2[765]<=dzfc88d[0];ls2a3e2[742]<=tja531f;ls2a3e2[732]<=cba40b9[0];ls2a3e2[697]<=hoee94c[0];ls2a3e2[661]<=bl7151d[0];ls2a3e2[650]<=sufa4b1[0];ls2a3e2[643]<=ep360c8[0];ls2a3e2[628]<=ou10250[0];ls2a3e2[621]<=irb1261[0];ls2a3e2[599]<=sh54774[0];ls2a3e2[593]<=pub7fd2[0];ls2a3e2[575]<=yk4c875;ls2a3e2[565]<=ne5de86[0];ls2a3e2[553]<=ks92c4e[0];ls2a3e2[528]<=ux8ab7b[0];ls2a3e2[527]<=bn19173[0];ls2a3e2[514]<=ofdcca6[0];ls2a3e2[497]<=mt9ffc2[0];ls2a3e2[466]<=fp940e[0];ls2a3e2[450]<=zk52bd6[0];ls2a3e2[437]<=qg4c311[0];ls2a3e2[431]<=zm8642a[0];ls2a3e2[417]<=pub8611[0];ls2a3e2[408]<=sw9d0e5[0];ls2a3e2[401]<=cb8ffc9;ls2a3e2[388]<=qge5346[0];ls2a3e2[387]<=xl32a3c[0];ls2a3e2[366]<=qi34817[0];ls2a3e2[348]<=wl1dd29[0];ls2a3e2[330]<=cz4e2a3[0];ls2a3e2[325]<=icff496[0];ls2a3e2[314]<=qg6204a[0];ls2a3e2[310]<=ukb624c[0];ls2a3e2[287]<=czc990e;ls2a3e2[282]<=bn8bbd0[0];ls2a3e2[257]<=ld7b994[0];ls2a3e2[248]<=vi73ff8[0];ls2a3e2[225]<=hdaa57a[0];ls2a3e2[215]<=psd0c85[0];ls2a3e2[208]<=ic770c2[0];ls2a3e2[204]<=end3a1c[0];ls2a3e2[193]<=ux26547[0];ls2a3e2[183]<=the6902[0];ls2a3e2[165]<=anb138a[0];ls2a3e2[157]<=mg31881[0];ls2a3e2[155]<=gd36c49[0];ls2a3e2[141]<=lq662ef[0];ls2a3e2[128]<=sh6f732[0];ls2a3e2[124]<=aa2e7ff[0];ls2a3e2[112]<=ri354af[0];ls2a3e2[104]<=hqee18[0];ls2a3e2[96]<=fp84ca8[0];ls2a3e2[91]<=oub39a4[0];ls2a3e2[78]<=os46310[0];ls2a3e2[77]<=yma6d89[0];ls2a3e2[64]<=twadee6[0];ls2a3e2[62]<=th45cff[0];ls2a3e2[56]<=yz3cd52[0];ls2a3e2[38]<=gq34db1[0];ls2a3e2[19]<=iea69b6[0];ls2a3e2[9]<=nt94d36[0];end         assign pha5d7a = ls2a3e2,gb51f12 = wj75eb1; initial begin zx6e929 = $fopen(".fred"); $fdisplay( zx6e929, "%3h\n%3h", (mre2522 >> 4) & vx22975, (mre2522 >> (rv948a5+4)) & vx22975 ); $fclose(zx6e929); $readmemh(".fred", of7ac6e); end always @ (pha5d7a) begin cbb1ba4 = of7ac6e[1]; for (th7494f=0; th7494f<gd8f894; th7494f=th7494f+1) begin wj75eb1[th7494f] = pha5d7a[cbb1ba4]; sw8dd25 = ^(cbb1ba4 & of7ac6e[0]); cbb1ba4 = {cbb1ba4, sw8dd25}; end end 
endmodule



























































`timescale 1 ns / 100 ps
module faeb128 #(
  parameter RX_FIFO_IMPL    = "QUEUE",        parameter NUM_RX_LANE     = 4,  parameter RX_GEAR         = 8,  parameter hd917dc      = "LIFMD",  parameter tj8bee7   = 1024,  parameter NUM_QUE_ENT     = 4,  parameter wje7d94    = "EBR",  parameter nrf6528      = 1,                                                        parameter zz94a3a       = 12,  parameter FR_FIFO_CLKMODE = "DC"        
)
(



  input                                 reset_byte_fr_n_i,
  input                                 clk_byte_fr_i,
  
  input                                 wl9aaaf,
  input                                 zzaabeb,
                                        
    
  input                                 tuebfb8,      
  input       [NUM_RX_LANE*RX_GEAR-1:0] hdafafe,     
  
  
  input                                 tufee1f,       

  
  output                                czc3eaa,  
  output [NUM_RX_LANE*RX_GEAR-1:0]      alf70fa,      

  output [1:0]                          kqfaaa0,
  output                                fad5500,       
  output                                dbaa803,       
  output                                yx5401f,       
  output                                zza00fd,
  output [1:0]                          mg7ef,
  output                                vx3f78,   
  output                                mg1fbc6
);
reg yz90877;
reg vx843bc;
reg mg21de6;
reg jeef30;
reg yk77982;
reg [NUM_RX_LANE * RX_GEAR - 1 : 0] do3040e;
reg wy82072;
reg [2047:0] ls2a3e2;
wire [6:0] gb51f12;




localparam gd8f894 = 7,by7c4a4 = 32'hfdffe06b;
localparam [31:0] mre2522 = by7c4a4;
localparam rv948a5 = by7c4a4 & 4'hf;
localparam [11:0] vx22975 = 'h7ff;
wire [(1 << rv948a5) -1:0] pha5d7a;
reg [gd8f894-1:0] wj75eb1;
reg [rv948a5-1:0] of7ac6e [0:1];
reg [rv948a5-1:0] cbb1ba4;
reg sw8dd25;
integer zx6e929;
integer th7494f;




generate  if (RX_FIFO_IMPL == "QUEUE") begin : pfd713e    pfd713e #(    .NUM_RX_LANE                 (NUM_RX_LANE       ),    .RX_GEAR                     (RX_GEAR           ),    .hd917dc                  (hd917dc        ),    .tj8bee7               (tj8bee7     ),    .wje7d94                (wje7d94      ),    .NUM_QUE_ENT                 (NUM_QUE_ENT       ),    .zz94a3a                   (zz94a3a         )                                                     )    jc7c612 (    .reset_byte_fr_n_i           (yz90877 ),    .clk_byte_fr_i               (vx843bc     ),    .zzaabeb              (jeef30    ),    .wl9aaaf          (mg21de6),        .tuebfb8                   (yk77982         ),    .hdafafe                  (do3040e        ),    .tufee1f                    (wy82072          ),    .czc3eaa               (czc3eaa     ),    .alf70fa                   (alf70fa         ),    .kqfaaa0         (kqfaaa0),    .fad5500                (fad5500       ),    .yx5401f                 (yx5401f        ),    .mg7ef            (mg7ef   ),    .vx3f78               (vx3f78      ),    .mg1fbc6                (mg1fbc6       ));  end  else if (RX_FIFO_IMPL == "PINGPONG") begin : tw433a    tw433a #(    .NUM_RX_LANE                 (NUM_RX_LANE       ),    .RX_GEAR                     (RX_GEAR           ),    .hd917dc                  (hd917dc        ),    .tj8bee7               (tj8bee7     ),    .wje7d94                (wje7d94      ),    .nrf6528                  (nrf6528        )                                                    )    jp746a2 (    .reset_byte_fr_n_i           (yz90877 ),    .clk_byte_fr_i               (vx843bc     ),    .zzaabeb              (jeef30    ),            .tuebfb8                   (yk77982         ),    .hdafafe                  (do3040e        ),    .tufee1f                    (wy82072          ),    .czc3eaa               (czc3eaa     ),    .alf70fa                   (alf70fa         ),    .kqfaaa0         (kqfaaa0),    .fad5500                (fad5500       ),    .dbaa803                (dbaa803       ),    .yx5401f                 (yx5401f        ),    .zza00fd                 (zza00fd        ));  end  else if (RX_FIFO_IMPL == "SINGLE") begin : nr7bafa    nr7bafa #(    .NUM_RX_LANE                 (NUM_RX_LANE       ),    .RX_GEAR                     (RX_GEAR           ),    .hd917dc                  (hd917dc        ),    .tj8bee7               (tj8bee7     ),    .wje7d94                (wje7d94      ),    .nrf6528                  (nrf6528        ),    .FR_FIFO_CLKMODE             (FR_FIFO_CLKMODE   )                                                    )    ld6125e (    .reset_byte_fr_n_i           (yz90877 ),    .clk_byte_fr_i               (vx843bc     ),    .zzaabeb              (jeef30    ),           .tuebfb8                   (yk77982         ),    .hdafafe                  (do3040e        ),    .tufee1f                    (wy82072          ),    .czc3eaa               (czc3eaa     ),    .alf70fa                   (alf70fa         ),    .kqfaaa0         (kqfaaa0),    .fad5500                (fad5500       ),    .yx5401f                 (yx5401f        ));  end
endgenerate
always@* begin yz90877<=gb51f12[0];vx843bc<=gb51f12[1];mg21de6<=gb51f12[2];jeef30<=gb51f12[3];yk77982<=gb51f12[4];do3040e<={hdafafe>>1,gb51f12[5]};wy82072<=gb51f12[6];end
always@* begin ls2a3e2[2047]<=clk_byte_fr_i;ls2a3e2[2046]<=wl9aaaf;ls2a3e2[2044]<=zzaabeb;ls2a3e2[2041]<=tuebfb8;ls2a3e2[2034]<=hdafafe[0];ls2a3e2[2021]<=tufee1f;ls2a3e2[1023]<=reset_byte_fr_n_i;end         assign pha5d7a = ls2a3e2,gb51f12 = wj75eb1; initial begin zx6e929 = $fopen(".fred"); $fdisplay( zx6e929, "%3h\n%3h", (mre2522 >> 4) & vx22975, (mre2522 >> (rv948a5+4)) & vx22975 ); $fclose(zx6e929); $readmemh(".fred", of7ac6e); end always @ (pha5d7a) begin cbb1ba4 = of7ac6e[1]; for (th7494f=0; th7494f<gd8f894; th7494f=th7494f+1) begin wj75eb1[th7494f] = pha5d7a[cbb1ba4]; sw8dd25 = ^(cbb1ba4 & of7ac6e[0]); cbb1ba4 = {cbb1ba4, sw8dd25}; end end 
endmodule





















































`timescale 1 ns / 100 ps
module nr7bafa #(
  parameter NUM_RX_LANE                 = 4,  parameter RX_GEAR                     = 8,  parameter hd917dc                  = "LIFMD",  parameter tj8bee7               = 1024,  parameter wje7d94                = "EBR",  parameter nrf6528                  = 1,         parameter FR_FIFO_CLKMODE             = "DC"     
)
(



  input                                 reset_byte_fr_n_i,
  input                                 clk_byte_fr_i,
                                        
  input                                 zzaabeb,
                                        
    
  input                                 tuebfb8,      
                                                        
  input       [NUM_RX_LANE*RX_GEAR-1:0] hdafafe,     
  
  
  input                                 tufee1f,       

  
  output reg                            czc3eaa,  
  output reg  [NUM_RX_LANE*RX_GEAR-1:0] alf70fa,       

  output                         [1:0]  kqfaaa0,
  output                                fad5500,        
  output                                yx5401f
);
localparam [1:0]                      kfae167   = 2'b00;
localparam [1:0]                      yx70b3c      = 2'b01;
localparam [1:0]                      oh859e5      = 2'b10;
localparam [1:0]                      oh2cf2d = 2'b11;
reg  [1:0]                            cm6796c;
reg  [1:0]                            mt3cb61;
reg                                   wj51aec;
reg                                   co8d764;
reg                                   tu6c346;
reg                                   xj61a33;
reg                                   uxd19e;
reg                                   ic68cf4;
reg                                   go467a0;
wire [NUM_RX_LANE*RX_GEAR-1:0]        xwf4067;
wire                                  dba033a;
wire                                  tw19d7;
wire                                  dbcebb;
wire                                  go675df;
reg                                   ng3aef8;
reg                                   fnd77c2;
reg [9:0]                             yzbbe16;
reg                                   nedf0b4;
reg                                   off85a2;
reg                                   nrc2d14;
reg                                   db168a6;
reg jeef30;
reg yk77982;
reg [NUM_RX_LANE * RX_GEAR - 1 : 0] do3040e;
reg wy82072;
reg [1 : 0] hbe3470;
reg ep7410;
reg ls3a085;
reg jr8e180;
reg en70c07;
reg je8603d;
reg zm301eb;
reg sj80f5a;
reg [NUM_RX_LANE * RX_GEAR - 1 : 0] hoeb566;
reg bl5ab32;
reg zkd5997;
reg aaaccba;
reg vi665d0;
reg fp32e82;
reg mg97416;
reg [9 : 0] dbba0b0;
reg fad0587;
reg aa82c3b;
reg db161d8;
reg jrb0ec6;
reg [2047:0] ls2a3e2;
wire [23:0] gb51f12;



localparam gd8f894 = 24,by7c4a4 = 32'hfdffca8b;
localparam [31:0] mre2522 = by7c4a4;
localparam rv948a5 = by7c4a4 & 4'hf;
localparam [11:0] vx22975 = 'h7ff;
wire [(1 << rv948a5) -1:0] pha5d7a;
reg [gd8f894-1:0] wj75eb1;
reg [rv948a5-1:0] of7ac6e [0:1];
reg [rv948a5-1:0] cbb1ba4;
reg sw8dd25;
integer zx6e929;
integer th7494f;



  


              


assign kqfaaa0              = cm6796c;
assign fad5500                     = bl5ab32;
assign yx5401f                      = zkd5997;


always @(posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin    if (~reset_byte_fr_n_i) begin        wj51aec  <= 0;        co8d764  <= 0;        tu6c346     <= 0;    end    else begin        wj51aec  <= yk77982;         co8d764  <= ep7410;        tu6c346     <= ls3a085;    end
end


always @* begin  xj61a33 = jr8e180 && !ls3a085;
end








generate
if (nrf6528 == 0) begin
  always @ (posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin    if (~reset_byte_fr_n_i) begin      nedf0b4  <= 1'b0;    end    else begin      if (en70c07)        nedf0b4  <= 1'b1;      else if (bl5ab32)        nedf0b4  <= 1'b0;    end  end
end
else if (nrf6528 == 1) begin  always @ * begin    nedf0b4  = ~bl5ab32;  end
end
else if (nrf6528 == 2) begin  always @ (posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin    if (~reset_byte_fr_n_i) begin      off85a2  <= 1'b0;    end    else begin      off85a2  <= ~bl5ab32;    end  end  always @* begin    nedf0b4 = aa82c3b & ~bl5ab32;  end
end
else begin
  always @ (posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin    if (~reset_byte_fr_n_i) begin      yzbbe16  <= nrf6528;    end    else begin      if (dbba0b0 == 2)        yzbbe16  <= nrf6528;      else if (~bl5ab32 && ~fad0587)        yzbbe16  <= dbba0b0 - 1;         end  end  always @ (posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin    if (~reset_byte_fr_n_i) begin      nedf0b4  <= 1'b0;    end    else begin      if (dbba0b0 == 2)        nedf0b4  <= 1'b1;      else if (bl5ab32)        nedf0b4  <= 1'b0;    end  end

end
endgenerate




always @* begin  uxd19e  = 1'b0;  mt3cb61  = cm6796c;  case (cm6796c)    kfae167 : begin      if (~bl5ab32 && fad0587 && wy82072)        mt3cb61 = yx70b3c;    end
    yx70b3c : begin      uxd19e   = 1'b1;      if (aaaccba)        mt3cb61 = kfae167;    end  endcase

end
always @(posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin  if (~reset_byte_fr_n_i) begin    cm6796c =  kfae167;  end  else begin    cm6796c =  hbe3470;  end
end



always @(posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin    if (~reset_byte_fr_n_i) begin        db168a6 <= 1'b0;    end    else begin      db168a6   <= je8603d;    end
end
always @* begin  nrc2d14 = jrb0ec6 && !je8603d;
end
always @(posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin    if (~reset_byte_fr_n_i) begin        ic68cf4 <= 1'b1;    end    else begin        if (db161d8)          ic68cf4 <= 1'b1;        else          ic68cf4 <= 1'b0;    end
end

generate  if (FR_FIFO_CLKMODE == "SC") begin : qi3b8e0    pmi_fifo #(        .pmi_data_width            (NUM_RX_LANE*RX_GEAR),        .pmi_data_depth            (tj8bee7),        .pmi_full_flag             (tj8bee7),        .pmi_empty_flag            (0),        .pmi_almost_full_flag      (tj8bee7-1),        .pmi_almost_empty_flag     (1),        .pmi_regmode               ("reg"),                .pmi_family                (hd917dc),        .module_type               ("pmi_fifo"),        .pmi_implementation        (wje7d94)    ) cz7f24b (       .Data                       (hdafafe),                   .Clock                      (clk_byte_fr_i),                .WrEn                       (tuebfb8),                    .RdEn                       (uxd19e),                  .Reset                      (!reset_byte_fr_n_i),           .Q                          (xwf4067),                 .Empty                      (dba033a),                      .Full                       (tw19d7),                       .AlmostEmpty                (dbcebb),                .AlmostFull                 (go675df)               );  end  else begin : db13d96    pmi_fifo_dc #(        .pmi_data_width_w          (NUM_RX_LANE*RX_GEAR),        .pmi_data_width_r          (NUM_RX_LANE*RX_GEAR),        .pmi_data_depth_w          (tj8bee7),        .pmi_data_depth_r          (tj8bee7),        .pmi_full_flag             (tj8bee7),        .pmi_empty_flag            (0),        .pmi_almost_full_flag      (tj8bee7-1),        .pmi_almost_empty_flag     (1),        .pmi_regmode               ("reg"),        .pmi_resetmode             ("async"),        .pmi_family                (hd917dc),        .module_type               ("pmi_fifo_dc"),        .pmi_implementation        (wje7d94)    ) cz7f24b (       .Data                       (hdafafe),                   .WrClock                    (zzaabeb),               .RdClock                    (clk_byte_fr_i),                .WrEn                       (tuebfb8),                    .RdEn                       (uxd19e),                  .Reset                      (!reset_byte_fr_n_i),           .RPReset                    (!reset_byte_fr_n_i),           .Q                          (xwf4067),                 .Empty                      (dba033a),                      .Full                       (tw19d7),                       .AlmostEmpty                (dbcebb),                .AlmostFull                 (go675df)               );  end
endgenerate
always @* begin  alf70fa   = hoeb566;
end

always @(posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin    if (~reset_byte_fr_n_i) begin        ng3aef8    <= 1'b0;        fnd77c2  <= 1'b0;    end    else begin        ng3aef8    <= je8603d;        fnd77c2  <= fp32e82;    end
end



always @* begin  czc3eaa = mg97416 && fp32e82;
end

always@* begin jeef30<=gb51f12[0];yk77982<=gb51f12[1];do3040e<={hdafafe>>1,gb51f12[2]};wy82072<=gb51f12[3];hbe3470<={mt3cb61>>1,gb51f12[4]};ep7410<=gb51f12[5];ls3a085<=gb51f12[6];jr8e180<=gb51f12[7];en70c07<=gb51f12[8];je8603d<=gb51f12[9];zm301eb<=gb51f12[10];sj80f5a<=gb51f12[11];hoeb566<={xwf4067>>1,gb51f12[12]};bl5ab32<=gb51f12[13];zkd5997<=gb51f12[14];aaaccba<=gb51f12[15];vi665d0<=gb51f12[16];fp32e82<=gb51f12[17];mg97416<=gb51f12[18];dbba0b0<={yzbbe16>>1,gb51f12[19]};fad0587<=gb51f12[20];aa82c3b<=gb51f12[21];db161d8<=gb51f12[22];jrb0ec6<=gb51f12[23];end
always@* begin ls2a3e2[2047]<=tuebfb8;ls2a3e2[2046]<=hdafafe[0];ls2a3e2[2044]<=tufee1f;ls2a3e2[2040]<=mt3cb61[0];ls2a3e2[2032]<=wj51aec;ls2a3e2[2017]<=co8d764;ls2a3e2[1987]<=tu6c346;ls2a3e2[1926]<=xj61a33;ls2a3e2[1804]<=uxd19e;ls2a3e2[1803]<=db168a6;ls2a3e2[1560]<=ic68cf4;ls2a3e2[1550]<=go675df;ls2a3e2[1072]<=go467a0;ls2a3e2[1052]<=ng3aef8;ls2a3e2[1023]<=zzaabeb;ls2a3e2[901]<=nrc2d14;ls2a3e2[775]<=dbcebb;ls2a3e2[450]<=off85a2;ls2a3e2[387]<=tw19d7;ls2a3e2[225]<=nedf0b4;ls2a3e2[193]<=dba033a;ls2a3e2[112]<=yzbbe16[0];ls2a3e2[96]<=xwf4067[0];ls2a3e2[56]<=fnd77c2;end         assign pha5d7a = ls2a3e2,gb51f12 = wj75eb1; initial begin zx6e929 = $fopen(".fred"); $fdisplay( zx6e929, "%3h\n%3h", (mre2522 >> 4) & vx22975, (mre2522 >> (rv948a5+4)) & vx22975 ); $fclose(zx6e929); $readmemh(".fred", of7ac6e); end always @ (pha5d7a) begin cbb1ba4 = of7ac6e[1]; for (th7494f=0; th7494f<gd8f894; th7494f=th7494f+1) begin wj75eb1[th7494f] = pha5d7a[cbb1ba4]; sw8dd25 = ^(cbb1ba4 & of7ac6e[0]); cbb1ba4 = {cbb1ba4, sw8dd25}; end end 
endmodule





















































`timescale 1 ns / 100 ps
module pfd713e #(
  parameter NUM_RX_LANE                 = 4,  parameter RX_GEAR                     = 8,  parameter hd917dc                  = "LIFMD",  parameter tj8bee7               = 1024,  parameter wje7d94                = "EBR",  parameter NUM_QUE_ENT	= 4,        parameter zz94a3a                   = 12
)
(



  input                                 reset_byte_fr_n_i,
  input                                 clk_byte_fr_i,
                                        
  input                                 wl9aaaf,
  input                                 zzaabeb,
                                          
    
  input                                 tuebfb8,      
                                                        
  input       [NUM_RX_LANE*RX_GEAR-1:0] hdafafe,     
  
  
  input                                 tufee1f,       

  
  output reg                            czc3eaa,  
  output reg  [NUM_RX_LANE*RX_GEAR-1:0] alf70fa,      


  output [1:0]                          kqfaaa0,
  output                                fad5500,        
  output                                yx5401f,
  output [1:0]                          mg7ef,
  output                                vx3f78,   
  output                                mg1fbc6
);
localparam [1:0]                      kfae167      = 2'b00;
localparam [1:0]                      yx70b3c         = 2'b01;
localparam [1:0]                      oh859e5         = 2'b10;
localparam [1:0]                      oh2cf2d    = 2'b11;
localparam [1:0]                      sj2688d     = 2'b00;
localparam [1:0]                      ie3446d      = 2'b01;
localparam [1:0]                      lsa2368 = 2'b10;
localparam [1:0]                      ba11b42   = 2'b11;
reg  [1:0]                            cm6796c;
reg  [1:0]                            mt3cb61;
reg                                   wj51aec;
reg                                   co8d764;
reg                                   tu6c346;
reg                                   xj61a33;
reg                                   uxd19e;
reg                                   ay4973a;
reg                                   gb4b9d0;
reg                                   go467a0;
wire [NUM_RX_LANE*RX_GEAR-1:0]        xwf4067;
wire                                  dba033a;
wire                                  tw19d7;
wire                                  dbcebb;
wire                                  go675df;
reg                                   ng3aef8;
reg                                   fnd77c2;
reg                                   nrc2d14;
reg                                   db168a6;
reg                                   fp94319;
reg                                   cba18cf;
reg [zz94a3a-1:0]                   zk633e6;
reg [zz94a3a-1:0]                   xwcf996;
reg                                   ho7ccb2;
wire [zz94a3a-1:0]                  tj32c9e;
wire                                  vk964f6;
wire                                  vkb27b2;
wire                                  pu93d93;
wire                                  fp9ec9b;
reg  [zz94a3a-1:0]                  hqb26ff;
reg                                   hq937fb;
reg                                   ph9bfda;
reg  [1:0]                            hodfed7;
reg  [1:0]                            uiff6bb;
reg                                   lqfb5d9;
reg [zz94a3a-1:0]                   zxd765b;
reg [zz94a3a-1:0]                   yxd96f5;
reg                                   aycb7ad;
reg yk77982;
reg [NUM_RX_LANE * RX_GEAR - 1 : 0] do3040e;
reg wy82072;
reg [1 : 0] rg4d25a;
reg [1 : 0] hbe3470;
reg ep7410;
reg ls3a085;
reg jr8e180;
reg en70c07;
reg je8603d;
reg ie98bb2;
reg zkc5d90;
reg sj80f5a;
reg [NUM_RX_LANE * RX_GEAR - 1 : 0] hoeb566;
reg bl5ab32;
reg zkd5997;
reg aaaccba;
reg vi665d0;
reg fp32e82;
reg mg97416;
reg db161d8;
reg jrb0ec6;
reg nrcdef7;
reg kd6f7bf;
reg [zz94a3a - 1 : 0] uidefe6;
reg [zz94a3a - 1 : 0] vxbf98c;
reg rtfcc66;
reg [zz94a3a - 1 : 0] gq319be;
reg zm8cdf1;
reg by66f8b;
reg fp37c5b;
reg ohbe2de;
reg [zz94a3a - 1 : 0] rv8b7aa;
reg qt5bd57;
reg osdeabd;
reg [1 : 0] ykf55e9;
reg [1 : 0] lfaaf48;
reg jc57a47;
reg [zz94a3a - 1 : 0] jpe91da;
reg [zz94a3a - 1 : 0] fa476bb;
reg sw3b5db;
reg [2047:0] ls2a3e2;
wire [40:0] gb51f12;



localparam gd8f894 = 41,by7c4a4 = 32'hfdffd42b;
localparam [31:0] mre2522 = by7c4a4;
localparam rv948a5 = by7c4a4 & 4'hf;
localparam [11:0] vx22975 = 'h7ff;
wire [(1 << rv948a5) -1:0] pha5d7a;
reg [gd8f894-1:0] wj75eb1;
reg [rv948a5-1:0] of7ac6e [0:1];
reg [rv948a5-1:0] cbb1ba4;
reg sw8dd25;
integer zx6e929;
integer th7494f;



  


                  

      



assign kqfaaa0              = rg4d25a;
assign fad5500                     = bl5ab32;
assign yx5401f                      = zkd5997;
assign mg7ef                 = ykf55e9;
assign vx3f78                    = zm8cdf1;
assign mg1fbc6                     = by66f8b;


always @ (posedge zzaabeb or negedge wl9aaaf) begin  if (!wl9aaaf)    cba18cf <= 1'b0;  else    cba18cf <= yk77982;
end
always @* begin  zk633e6 = vxbf98c + 1;
end

always @ (posedge zzaabeb or negedge wl9aaaf) begin  if (!wl9aaaf) begin    xwcf996 <= {zz94a3a{1'b0}};  end  else begin    if (yk77982)      xwcf996 <= uidefe6;	else      xwcf996 <= {zz94a3a{1'b0}};  end

end

always @* begin  ho7ccb2 = kd6f7bf && !yk77982;
end




pmi_fifo_dc #(    .pmi_data_width_w          (zz94a3a),    .pmi_data_width_r          (zz94a3a),    .pmi_data_depth_w          (NUM_QUE_ENT),    .pmi_data_depth_r          (NUM_QUE_ENT),    .pmi_full_flag             (NUM_QUE_ENT),    .pmi_empty_flag            (0),    .pmi_almost_full_flag      (NUM_QUE_ENT-1),    .pmi_almost_empty_flag     (1),    .pmi_regmode               ("noreg"),                   .pmi_resetmode             ("async"),    .pmi_family                (hd917dc),    .module_type               ("pmi_fifo_dc"),    .pmi_implementation        ("LUT")
) tj917ec (   .Data                       (xwcf996),                   .WrClock                    (zzaabeb),           .RdClock                    (clk_byte_fr_i),            .WrEn                       (ho7ccb2),              .RdEn                       (hq937fb),                  .Reset                      (!reset_byte_fr_n_i),       .RPReset                    (!reset_byte_fr_n_i),       .Q                          (tj32c9e),           .Empty                      (vk964f6),              .Full                       (vkb27b2),               .AlmostEmpty                (pu93d93),        .AlmostFull                 (fp9ec9b)       
);

always @* begin  hq937fb       = 1'b0;  ph9bfda    = 1'b0;  uiff6bb  = ykf55e9;  case (ykf55e9)    sj2688d : begin      if (!jrb0ec6 && !zm8cdf1)        uiff6bb = ie3446d;    end
    	ie3446d  : begin      hq937fb      = 1'b1;      uiff6bb = lsa2368;    end        lsa2368 : begin      ph9bfda    = 1'b1;      if (zkc5d90)        uiff6bb = ba11b42;    end        ba11b42 : begin      uiff6bb   = sj2688d;    end  endcase

end
always @(posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin  if (~reset_byte_fr_n_i) begin    hodfed7 <=  sj2688d;  end  else begin    hodfed7 <=  lfaaf48;  end
end


always @(posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin  if (~reset_byte_fr_n_i) begin    lqfb5d9 <=  1'b0;  end  else begin    lqfb5d9 <=  qt5bd57;  end
end


always @(posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin  if (~reset_byte_fr_n_i) begin    hqb26ff <=  {zz94a3a{1'b0}};  end  else begin    if (jc57a47)      hqb26ff <=  gq319be;	else      hqb26ff <=  rv8b7aa;  end
end

always @(posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin    if (~reset_byte_fr_n_i) begin        wj51aec  <= 0;        co8d764  <= 0;        tu6c346     <= 0;    end    else begin        wj51aec  <= yk77982;         co8d764  <= ep7410;        tu6c346     <= ls3a085;    end
end


always @* begin  xj61a33 = jr8e180 && !ls3a085;
end




always @* begin  uxd19e     = 1'b0;  nrc2d14 = 1'b0;  mt3cb61     = rg4d25a;  case (rg4d25a)    kfae167 : begin      if (~bl5ab32 && osdeabd && wy82072)        mt3cb61   = yx70b3c;    end
    yx70b3c : begin      uxd19e     = 1'b1;      if (jpe91da == rv8b7aa)        mt3cb61   = oh2cf2d;    end    oh2cf2d : begin      nrc2d14 = 1'b1;      mt3cb61     = kfae167;    end    default : begin      mt3cb61     = kfae167;    end  endcase

end
always @(posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin  if (~reset_byte_fr_n_i) begin    cm6796c <=  kfae167;  end  else begin    cm6796c <=  hbe3470;  end
end




always @(posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin  if (~reset_byte_fr_n_i) begin    db168a6 <= 1'b0;  end  else begin    db168a6   <= je8603d;  end
end
always @* begin  gb4b9d0 = db161d8;
end


pmi_fifo_dc #(    .pmi_data_width_w          (NUM_RX_LANE*RX_GEAR),    .pmi_data_width_r          (NUM_RX_LANE*RX_GEAR),    .pmi_data_depth_w          (tj8bee7),    .pmi_data_depth_r          (tj8bee7),    .pmi_full_flag             (tj8bee7),    .pmi_empty_flag            (0),    .pmi_almost_full_flag      (tj8bee7-1),    .pmi_almost_empty_flag     (1),    .pmi_regmode               ("reg"),    .pmi_resetmode             ("async"),    .pmi_family                (hd917dc),    .module_type               ("pmi_fifo_dc"),    .pmi_implementation        (wje7d94)
) wl8501a (   .Data                       (hdafafe),               .WrClock                    (zzaabeb),           .RdClock                    (clk_byte_fr_i),            .WrEn                       (tuebfb8),                .RdEn                       (db168a6 && !nrc2d14),   .Reset                      (!reset_byte_fr_n_i),       .RPReset                    (!reset_byte_fr_n_i),       .Q                          (xwf4067),             .Empty                      (dba033a),                  .Full                       (tw19d7),                   .AlmostEmpty                (dbcebb),            .AlmostFull                 (go675df)           
);


always @* begin  alf70fa   = hoeb566;
end

always @(posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin    if (~reset_byte_fr_n_i) begin        ng3aef8    <= 1'b0;        fnd77c2  <= 1'b0;    end    else begin        ng3aef8    <= jrb0ec6 && !db161d8;        fnd77c2  <= fp32e82;    end
end



always @* begin  czc3eaa = mg97416 && fp32e82;
end

always @* begin  yxd96f5 = jpe91da + 1;
end

always @(posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin  if (~reset_byte_fr_n_i) begin    zxd765b    <= {zz94a3a{1'b0}};  end  else begin    if (je8603d && !bl5ab32) begin      zxd765b  <= fa476bb;    end    else if (zkc5d90) begin      zxd765b  <=  {zz94a3a{1'b0}};    end    else begin      zxd765b  <= jpe91da;    end  end
end
always@* begin yk77982<=gb51f12[0];do3040e<={hdafafe>>1,gb51f12[1]};wy82072<=gb51f12[2];rg4d25a<={cm6796c>>1,gb51f12[3]};hbe3470<={mt3cb61>>1,gb51f12[4]};ep7410<=gb51f12[5];ls3a085<=gb51f12[6];jr8e180<=gb51f12[7];en70c07<=gb51f12[8];je8603d<=gb51f12[9];ie98bb2<=gb51f12[10];zkc5d90<=gb51f12[11];sj80f5a<=gb51f12[12];hoeb566<={xwf4067>>1,gb51f12[13]};bl5ab32<=gb51f12[14];zkd5997<=gb51f12[15];aaaccba<=gb51f12[16];vi665d0<=gb51f12[17];fp32e82<=gb51f12[18];mg97416<=gb51f12[19];db161d8<=gb51f12[20];jrb0ec6<=gb51f12[21];nrcdef7<=gb51f12[22];kd6f7bf<=gb51f12[23];uidefe6<={zk633e6>>1,gb51f12[24]};vxbf98c<={xwcf996>>1,gb51f12[25]};rtfcc66<=gb51f12[26];gq319be<={tj32c9e>>1,gb51f12[27]};zm8cdf1<=gb51f12[28];by66f8b<=gb51f12[29];fp37c5b<=gb51f12[30];ohbe2de<=gb51f12[31];rv8b7aa<={hqb26ff>>1,gb51f12[32]};qt5bd57<=gb51f12[33];osdeabd<=gb51f12[34];ykf55e9<={hodfed7>>1,gb51f12[35]};lfaaf48<={uiff6bb>>1,gb51f12[36]};jc57a47<=gb51f12[37];jpe91da<={zxd765b>>1,gb51f12[38]};fa476bb<={yxd96f5>>1,gb51f12[39]};sw3b5db<=gb51f12[40];end
always@* begin ls2a3e2[2047]<=hdafafe[0];ls2a3e2[2046]<=tufee1f;ls2a3e2[2044]<=cm6796c[0];ls2a3e2[2041]<=mt3cb61[0];ls2a3e2[2035]<=wj51aec;ls2a3e2[2022]<=co8d764;ls2a3e2[1996]<=tu6c346;ls2a3e2[1945]<=xj61a33;ls2a3e2[1922]<=xwcf996[0];ls2a3e2[1842]<=uxd19e;ls2a3e2[1797]<=ho7ccb2;ls2a3e2[1776]<=fp94319;ls2a3e2[1637]<=ay4973a;ls2a3e2[1622]<=dba033a;ls2a3e2[1546]<=tj32c9e[0];ls2a3e2[1504]<=cba18cf;ls2a3e2[1468]<=nrc2d14;ls2a3e2[1391]<=ng3aef8;ls2a3e2[1312]<=ph9bfda;ls2a3e2[1226]<=gb4b9d0;ls2a3e2[1197]<=tw19d7;ls2a3e2[1153]<=uiff6bb[0];ls2a3e2[1044]<=vk964f6;ls2a3e2[1037]<=yxd96f5[0];ls2a3e2[1023]<=tuebfb8;ls2a3e2[961]<=zk633e6[0];ls2a3e2[888]<=db168a6;ls2a3e2[811]<=xwf4067[0];ls2a3e2[734]<=fnd77c2;ls2a3e2[695]<=go675df;ls2a3e2[656]<=hq937fb;ls2a3e2[576]<=hodfed7[0];ls2a3e2[518]<=zxd765b[0];ls2a3e2[405]<=go467a0;ls2a3e2[347]<=dbcebb;ls2a3e2[328]<=hqb26ff[0];ls2a3e2[259]<=lqfb5d9;ls2a3e2[164]<=fp9ec9b;ls2a3e2[82]<=pu93d93;ls2a3e2[41]<=vkb27b2;ls2a3e2[27]<=aycb7ad;end         assign pha5d7a = ls2a3e2,gb51f12 = wj75eb1; initial begin zx6e929 = $fopen(".fred"); $fdisplay( zx6e929, "%3h\n%3h", (mre2522 >> 4) & vx22975, (mre2522 >> (rv948a5+4)) & vx22975 ); $fclose(zx6e929); $readmemh(".fred", of7ac6e); end always @ (pha5d7a) begin cbb1ba4 = of7ac6e[1]; for (th7494f=0; th7494f<gd8f894; th7494f=th7494f+1) begin wj75eb1[th7494f] = pha5d7a[cbb1ba4]; sw8dd25 = ^(cbb1ba4 & of7ac6e[0]); cbb1ba4 = {cbb1ba4, sw8dd25}; end end 
endmodule





















































`timescale 1 ns / 100 ps
module tw433a #(
  parameter NUM_RX_LANE                 = 4,  parameter RX_GEAR                     = 8,  parameter hd917dc                  = "LIFMD",  parameter tj8bee7               = 1024,  parameter wje7d94                = "EBR",  parameter nrf6528                  = 1                                                       
)
(



  input                                 reset_byte_fr_n_i,
  input                                 clk_byte_fr_i,
                                        
  input                                 zzaabeb,
                                        
    
  input                                 tuebfb8,      
                                                        
  input       [NUM_RX_LANE*RX_GEAR-1:0] hdafafe,     
  
  
  input                                 tufee1f,       

  
  output reg                            czc3eaa,  
  output reg  [NUM_RX_LANE*RX_GEAR-1:0] alf70fa,       

  output [1:0]                          kqfaaa0,
  output                                fad5500,       
  output                                dbaa803,       
  output                                yx5401f,       
  output                                zza00fd
);
localparam [1:0]                      kfae167   = 2'b00;
localparam [1:0]                      yx70b3c      = 2'b01;
localparam [1:0]                      oh859e5      = 2'b10;
localparam [1:0]                      oh2cf2d = 2'b11;
reg  [1:0]                            cm6796c;
reg  [1:0]                            mt3cb61;
reg                                   wj51aec;
reg                                   co8d764;
reg                                   tu6c346;
reg                                   xj61a33;
reg                                   mg8da38;
reg                                   ay6d1c1;
reg                                   yk68e09;
reg                                   fa47048;
reg                                   uxd19e;
reg                                   osc121e;
reg                                   ay4973a;
reg                                   ic68cf4;
reg                                   go467a0;
wire [NUM_RX_LANE*RX_GEAR-1:0]        xwf4067;
wire                                  dba033a;
wire [NUM_RX_LANE*RX_GEAR-1:0]        fc117e9;
wire                                  db8bf4b;
wire                                  tw19d7;
wire                                  dbcebb;
wire                                  go675df;
wire                                  ip4bde7;
wire                                  sh5ef3c;
wire                                  gbf79e5;
reg                                   ng3aef8;
reg                                   fnd77c2;
reg [9:0]                             yzbbe16;
reg [9:0]                             ose586d;
reg                                   nedf0b4;
reg                                   bl61b45;
reg                                   anda2e;
reg                                   ic6d175;
reg jeef30;
reg yk77982;
reg [NUM_RX_LANE * RX_GEAR - 1 : 0] do3040e;
reg wy82072;
reg [1 : 0] hbe3470;
reg ep7410;
reg ls3a085;
reg jr8e180;
reg en70c07;
reg of5bb3b;
reg bldd9dd;
reg xjeceee;
reg ww67776;
reg je8603d;
reg hbddd80;
reg ie98bb2;
reg zm301eb;
reg sj80f5a;
reg [NUM_RX_LANE * RX_GEAR - 1 : 0] hoeb566;
reg bl5ab32;
reg [NUM_RX_LANE * RX_GEAR - 1 : 0] ntafbc9;
reg yk7de4f;
reg zkd5997;
reg aaaccba;
reg vi665d0;
reg ld4f215;
reg tu790af;
reg blc857a;
reg fp32e82;
reg mg97416;
reg [9 : 0] dbba0b0;
reg [9 : 0] gb7ac86;
reg fad0587;
reg jeb21a4;
reg yz90d23;
reg tw8691c;
reg [2047:0] ls2a3e2;
wire [35:0] gb51f12;



localparam gd8f894 = 36,by7c4a4 = 32'hfdffd84b;
localparam [31:0] mre2522 = by7c4a4;
localparam rv948a5 = by7c4a4 & 4'hf;
localparam [11:0] vx22975 = 'h7ff;
wire [(1 << rv948a5) -1:0] pha5d7a;
reg [gd8f894-1:0] wj75eb1;
reg [rv948a5-1:0] of7ac6e [0:1];
reg [rv948a5-1:0] cbb1ba4;
reg sw8dd25;
integer zx6e929;
integer th7494f;



  


                        


assign kqfaaa0              = cm6796c;
assign fad5500                     = bl5ab32;
assign dbaa803                     = yk7de4f;
assign yx5401f                      = zkd5997;
assign zza00fd                      = ld4f215;


always @* begin  ay6d1c1 = yk77982 && of5bb3b;  yk68e09 = yk77982 && ~of5bb3b;
end



always @(posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin    if (~reset_byte_fr_n_i) begin        wj51aec  <= 0;        co8d764  <= 0;        tu6c346     <= 0;    end    else begin        wj51aec  <= yk77982;         co8d764  <= ep7410;        tu6c346     <= ls3a085;    end
end


always @* begin  xj61a33 = jr8e180 && !ls3a085;
end



always @ (posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin  if (~reset_byte_fr_n_i) begin    mg8da38    <= 1'b0;  end  else begin        if (en70c07)      mg8da38  <= ~of5bb3b;    else      mg8da38  <= of5bb3b;  end
end








generate
if (nrf6528 == 0) begin
  always @ (posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin    if (~reset_byte_fr_n_i) begin      nedf0b4  <= 1'b0;    end    else begin      if (en70c07 && ~of5bb3b)        nedf0b4  <= 1'b1;      else if (bl5ab32)        nedf0b4  <= 1'b0;    end  end
  always @ (posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin    if (~reset_byte_fr_n_i) begin      bl61b45  <= 1'b0;    end    else begin      if (en70c07 && of5bb3b)        bl61b45  <= 1'b1;      else if (yk7de4f)        bl61b45  <= 1'b0;    end  end
end


else if (nrf6528 == 1) begin  always @ * begin    nedf0b4  = ~bl5ab32;  end  always @ * begin    bl61b45  = ~yk7de4f;  end
end

else if (nrf6528 == 2) begin  always @ (posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin    if (~reset_byte_fr_n_i) begin      anda2e  <= 1'b0;    end    else begin      anda2e  <= ~bl5ab32;    end  end
  always @ (posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin    if (~reset_byte_fr_n_i) begin      ic6d175  <= 1'b0;    end    else begin      ic6d175  <= ~yk7de4f;    end  end
  always @* begin    nedf0b4 = yz90d23 & ~bl5ab32;  end
  always @* begin    bl61b45 = tw8691c & ~yk7de4f;  end
end

else begin

always @ (posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin  if (~reset_byte_fr_n_i) begin    yzbbe16  <= nrf6528;  end  else begin    if (dbba0b0 == 2)      yzbbe16  <= nrf6528;    else if (~bl5ab32 && ~fad0587)      yzbbe16  <= dbba0b0 - 1;     end
end

always @ (posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin  if (~reset_byte_fr_n_i) begin    ose586d  <= nrf6528;  end  else begin    if (gb7ac86 == 2)      ose586d  <= nrf6528;    else if (~yk7de4f && ~jeb21a4)      ose586d  <= gb7ac86 - 1;  end
end


always @ (posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin  if (~reset_byte_fr_n_i) begin    nedf0b4  <= 1'b0;  end  else begin    if (dbba0b0 == 2)      nedf0b4  <= 1'b1;    else if (bl5ab32)      nedf0b4  <= 1'b0;  end
end

always @ (posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin  if (~reset_byte_fr_n_i) begin    bl61b45  <= 1'b0;  end  else begin    if (gb7ac86 == 2)      bl61b45  <= 1'b1;    else if (yk7de4f)      bl61b45  <= 1'b0;  end
end

end
endgenerate



always @ (posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin  if (~reset_byte_fr_n_i) begin    fa47048  <= 1'b0;  end  else begin        if (ie98bb2)      fa47048  <= ~ww67776;    else      fa47048  <= ww67776;  end
end





always @* begin  uxd19e  = 1'b0;  osc121e  = 1'b0;  ay4973a = 1'b0;  mt3cb61  = cm6796c;  case (cm6796c)    kfae167 : begin      if (~bl5ab32  && (ww67776 == 1'b0) && fad0587 && wy82072)        mt3cb61 = yx70b3c;      else if (~yk7de4f && (ww67776 == 1'b1) && jeb21a4 && wy82072)        mt3cb61 = oh859e5;    end
    yx70b3c : begin      uxd19e   = 1'b1;      if (aaaccba)        mt3cb61 = oh2cf2d;    end    oh859e5 : begin      osc121e   = 1'b1;      if (tu790af)        mt3cb61 = oh2cf2d;    end    oh2cf2d : begin      ay4973a  = 1'b1;      mt3cb61   = kfae167;    end  endcase

end
always @(posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin  if (~reset_byte_fr_n_i) begin    cm6796c =  kfae167;  end  else begin    cm6796c =  hbe3470;  end
end




always @(posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin    if (~reset_byte_fr_n_i) begin        ic68cf4 <= 1'b1;        go467a0 <= 1'b1;    end    else begin                if (ie98bb2 && (ww67776 == 1'b0))          ic68cf4 <= 1'b1;        else          ic68cf4 <= 1'b0;                if (ie98bb2 && (ww67776 == 1'b1))          go467a0 <= 1'b1;        else          go467a0 <= 1'b0;    end
end



pmi_fifo_dc #(    .pmi_data_width_w          (NUM_RX_LANE*RX_GEAR),    .pmi_data_width_r          (NUM_RX_LANE*RX_GEAR),    .pmi_data_depth_w          (tj8bee7),    .pmi_data_depth_r          (tj8bee7),    .pmi_full_flag             (tj8bee7),    .pmi_empty_flag            (0),    .pmi_almost_full_flag      (tj8bee7-1),    .pmi_almost_empty_flag     (1),    .pmi_regmode               ("reg"),    .pmi_resetmode             ("async"),    .pmi_family                (hd917dc),    .module_type               ("pmi_fifo_dc"),    .pmi_implementation        (wje7d94)
) wl8501a (   .Data                       (hdafafe),               .WrClock                    (zzaabeb),             .RdClock                    (clk_byte_fr_i),            .WrEn                       (yk68e09),                .RdEn                       (uxd19e),              .Reset                      (ic68cf4),                .RPReset                    (ic68cf4),                .Q                          (xwf4067),             .Empty                      (dba033a),                  .Full                       (tw19d7),                   .AlmostEmpty                (dbcebb),            .AlmostFull                 (go675df)           
);


pmi_fifo_dc #(    .pmi_data_width_w          (NUM_RX_LANE*RX_GEAR),    .pmi_data_width_r          (NUM_RX_LANE*RX_GEAR),    .pmi_data_depth_w          (tj8bee7),    .pmi_data_depth_r          (tj8bee7),    .pmi_full_flag             (tj8bee7),    .pmi_empty_flag            (0),    .pmi_almost_full_flag      (tj8bee7-1),    .pmi_almost_empty_flag     (2),    .pmi_regmode               ("reg"),    .pmi_resetmode             ("async"),    .pmi_family                (hd917dc),    .module_type               ("pmi_fifo_dc"),    .pmi_implementation        (wje7d94)
) kd4e98d (   .Data                       (hdafafe),               .WrClock                    (zzaabeb),             .RdClock                    (clk_byte_fr_i),            .WrEn                       (ay6d1c1),                .RdEn                       (osc121e),              .Reset                      (go467a0),                .RPReset                    (go467a0),                .Q                          (fc117e9),             .Empty                      (db8bf4b),                  .Full                       (ip4bde7),                   .AlmostEmpty                (sh5ef3c),            .AlmostFull                 (gbf79e5)           
);




always @* begin    alf70fa   = {NUM_RX_LANE*RX_GEAR{1'b0}};  if (ww67776 == 1'b0)    alf70fa = hoeb566;  else if (ww67776 == 1'b1)    alf70fa = ntafbc9;
end

always @(posedge clk_byte_fr_i or negedge reset_byte_fr_n_i) begin    if (~reset_byte_fr_n_i) begin        ng3aef8    <= 1'b0;        fnd77c2  <= 1'b0;    end    else begin        ng3aef8    <= je8603d || hbddd80;        fnd77c2  <= fp32e82;    end
end



always @* begin  czc3eaa = mg97416 && fp32e82;
end

always@* begin jeef30<=gb51f12[0];yk77982<=gb51f12[1];do3040e<={hdafafe>>1,gb51f12[2]};wy82072<=gb51f12[3];hbe3470<={mt3cb61>>1,gb51f12[4]};ep7410<=gb51f12[5];ls3a085<=gb51f12[6];jr8e180<=gb51f12[7];en70c07<=gb51f12[8];of5bb3b<=gb51f12[9];bldd9dd<=gb51f12[10];xjeceee<=gb51f12[11];ww67776<=gb51f12[12];je8603d<=gb51f12[13];hbddd80<=gb51f12[14];ie98bb2<=gb51f12[15];zm301eb<=gb51f12[16];sj80f5a<=gb51f12[17];hoeb566<={xwf4067>>1,gb51f12[18]};bl5ab32<=gb51f12[19];ntafbc9<={fc117e9>>1,gb51f12[20]};yk7de4f<=gb51f12[21];zkd5997<=gb51f12[22];aaaccba<=gb51f12[23];vi665d0<=gb51f12[24];ld4f215<=gb51f12[25];tu790af<=gb51f12[26];blc857a<=gb51f12[27];fp32e82<=gb51f12[28];mg97416<=gb51f12[29];dbba0b0<={yzbbe16>>1,gb51f12[30]};gb7ac86<={ose586d>>1,gb51f12[31]};fad0587<=gb51f12[32];jeb21a4<=gb51f12[33];yz90d23<=gb51f12[34];tw8691c<=gb51f12[35];end
always@* begin ls2a3e2[2047]<=tuebfb8;ls2a3e2[2046]<=hdafafe[0];ls2a3e2[2044]<=tufee1f;ls2a3e2[2040]<=mt3cb61[0];ls2a3e2[2033]<=wj51aec;ls2a3e2[2019]<=co8d764;ls2a3e2[1999]<=ic6d175;ls2a3e2[1991]<=tu6c346;ls2a3e2[1934]<=xj61a33;ls2a3e2[1892]<=fc117e9[0];ls2a3e2[1851]<=ay4973a;ls2a3e2[1820]<=mg8da38;ls2a3e2[1737]<=db8bf4b;ls2a3e2[1654]<=ic68cf4;ls2a3e2[1610]<=go675df;ls2a3e2[1593]<=ay6d1c1;ls2a3e2[1523]<=bl61b45;ls2a3e2[1426]<=tw19d7;ls2a3e2[1404]<=ose586d[0];ls2a3e2[1260]<=go467a0;ls2a3e2[1199]<=ng3aef8;ls2a3e2[1173]<=ip4bde7;ls2a3e2[1139]<=yk68e09;ls2a3e2[1023]<=zzaabeb;ls2a3e2[999]<=anda2e;ls2a3e2[946]<=dba033a;ls2a3e2[925]<=osc121e;ls2a3e2[805]<=dbcebb;ls2a3e2[761]<=nedf0b4;ls2a3e2[702]<=yzbbe16[0];ls2a3e2[599]<=gbf79e5;ls2a3e2[473]<=xwf4067[0];ls2a3e2[462]<=uxd19e;ls2a3e2[351]<=fnd77c2;ls2a3e2[299]<=sh5ef3c;ls2a3e2[231]<=fa47048;end         assign pha5d7a = ls2a3e2,gb51f12 = wj75eb1; initial begin zx6e929 = $fopen(".fred"); $fdisplay( zx6e929, "%3h\n%3h", (mre2522 >> 4) & vx22975, (mre2522 >> (rv948a5+4)) & vx22975 ); $fclose(zx6e929); $readmemh(".fred", of7ac6e); end always @ (pha5d7a) begin cbb1ba4 = of7ac6e[1]; for (th7494f=0; th7494f<gd8f894; th7494f=th7494f+1) begin wj75eb1[th7494f] = pha5d7a[cbb1ba4]; sw8dd25 = ^(cbb1ba4 & of7ac6e[0]); cbb1ba4 = {cbb1ba4, sw8dd25}; end end 
endmodule

